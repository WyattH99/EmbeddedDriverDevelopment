
008_stm32f4xx_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000004fc  080001c4  080001c4  000101c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080006c0  080006c8  000106c8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080006c0  080006c0  000106c8  2**0
                  CONTENTS
  4 .ARM          00000000  080006c0  080006c0  000106c8  2**0
                  CONTENTS
  5 .preinit_array 00000000  080006c0  080006c8  000106c8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080006c0  080006c0  000106c0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080006c4  080006c4  000106c4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  000106c8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  080006c8  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  080006c8  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  000106c8  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  000106f2  2**0
                  CONTENTS, READONLY
 13 .debug_info   0000084b  00000000  00000000  00010735  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 0000021b  00000000  00000000  00010f80  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000b8  00000000  00000000  000111a0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 0000007e  00000000  00000000  00011258  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00001348  00000000  00000000  000112d6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000bea  00000000  00000000  0001261e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000051b1  00000000  00000000  00013208  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  00000224  00000000  00000000  000183bc  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000006d  00000000  00000000  000185e0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c4 <__do_global_dtors_aux>:
 80001c4:	b510      	push	{r4, lr}
 80001c6:	4c05      	ldr	r4, [pc, #20]	; (80001dc <__do_global_dtors_aux+0x18>)
 80001c8:	7823      	ldrb	r3, [r4, #0]
 80001ca:	b933      	cbnz	r3, 80001da <__do_global_dtors_aux+0x16>
 80001cc:	4b04      	ldr	r3, [pc, #16]	; (80001e0 <__do_global_dtors_aux+0x1c>)
 80001ce:	b113      	cbz	r3, 80001d6 <__do_global_dtors_aux+0x12>
 80001d0:	4804      	ldr	r0, [pc, #16]	; (80001e4 <__do_global_dtors_aux+0x20>)
 80001d2:	f3af 8000 	nop.w
 80001d6:	2301      	movs	r3, #1
 80001d8:	7023      	strb	r3, [r4, #0]
 80001da:	bd10      	pop	{r4, pc}
 80001dc:	20000000 	.word	0x20000000
 80001e0:	00000000 	.word	0x00000000
 80001e4:	080006a8 	.word	0x080006a8

080001e8 <frame_dummy>:
 80001e8:	b508      	push	{r3, lr}
 80001ea:	4b03      	ldr	r3, [pc, #12]	; (80001f8 <frame_dummy+0x10>)
 80001ec:	b11b      	cbz	r3, 80001f6 <frame_dummy+0xe>
 80001ee:	4903      	ldr	r1, [pc, #12]	; (80001fc <frame_dummy+0x14>)
 80001f0:	4803      	ldr	r0, [pc, #12]	; (8000200 <frame_dummy+0x18>)
 80001f2:	f3af 8000 	nop.w
 80001f6:	bd08      	pop	{r3, pc}
 80001f8:	00000000 	.word	0x00000000
 80001fc:	20000004 	.word	0x20000004
 8000200:	080006a8 	.word	0x080006a8

08000204 <GPIO_PeriClockControl>:
 * @return            -  void
 *
 * @Note              -  none

 */
void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnOrDi){
 8000204:	b480      	push	{r7}
 8000206:	b083      	sub	sp, #12
 8000208:	af00      	add	r7, sp, #0
 800020a:	6078      	str	r0, [r7, #4]
 800020c:	460b      	mov	r3, r1
 800020e:	70fb      	strb	r3, [r7, #3]
	if(EnOrDi == ENABLE){ // Enable
 8000210:	78fb      	ldrb	r3, [r7, #3]
 8000212:	2b01      	cmp	r3, #1
 8000214:	d157      	bne.n	80002c6 <GPIO_PeriClockControl+0xc2>
		if(pGPIOx == GPIOA){
 8000216:	687b      	ldr	r3, [r7, #4]
 8000218:	4a59      	ldr	r2, [pc, #356]	; (8000380 <GPIO_PeriClockControl+0x17c>)
 800021a:	4293      	cmp	r3, r2
 800021c:	d106      	bne.n	800022c <GPIO_PeriClockControl+0x28>
			GPIOA_PCLK_EN();
 800021e:	4b59      	ldr	r3, [pc, #356]	; (8000384 <GPIO_PeriClockControl+0x180>)
 8000220:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000222:	4a58      	ldr	r2, [pc, #352]	; (8000384 <GPIO_PeriClockControl+0x180>)
 8000224:	f043 0301 	orr.w	r3, r3, #1
 8000228:	6313      	str	r3, [r2, #48]	; 0x30
		}else if(pGPIOx == GPIOH){
			GPIOH_PCLK_DI();
		}
	}

}
 800022a:	e0a3      	b.n	8000374 <GPIO_PeriClockControl+0x170>
		}else if(pGPIOx == GPIOB){
 800022c:	687b      	ldr	r3, [r7, #4]
 800022e:	4a56      	ldr	r2, [pc, #344]	; (8000388 <GPIO_PeriClockControl+0x184>)
 8000230:	4293      	cmp	r3, r2
 8000232:	d106      	bne.n	8000242 <GPIO_PeriClockControl+0x3e>
			GPIOB_PCLK_EN();
 8000234:	4b53      	ldr	r3, [pc, #332]	; (8000384 <GPIO_PeriClockControl+0x180>)
 8000236:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000238:	4a52      	ldr	r2, [pc, #328]	; (8000384 <GPIO_PeriClockControl+0x180>)
 800023a:	f043 0302 	orr.w	r3, r3, #2
 800023e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000240:	e098      	b.n	8000374 <GPIO_PeriClockControl+0x170>
		}else if(pGPIOx == GPIOC){
 8000242:	687b      	ldr	r3, [r7, #4]
 8000244:	4a51      	ldr	r2, [pc, #324]	; (800038c <GPIO_PeriClockControl+0x188>)
 8000246:	4293      	cmp	r3, r2
 8000248:	d106      	bne.n	8000258 <GPIO_PeriClockControl+0x54>
			GPIOC_PCLK_EN();
 800024a:	4b4e      	ldr	r3, [pc, #312]	; (8000384 <GPIO_PeriClockControl+0x180>)
 800024c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800024e:	4a4d      	ldr	r2, [pc, #308]	; (8000384 <GPIO_PeriClockControl+0x180>)
 8000250:	f043 0304 	orr.w	r3, r3, #4
 8000254:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000256:	e08d      	b.n	8000374 <GPIO_PeriClockControl+0x170>
		}else if(pGPIOx == GPIOD){
 8000258:	687b      	ldr	r3, [r7, #4]
 800025a:	4a4d      	ldr	r2, [pc, #308]	; (8000390 <GPIO_PeriClockControl+0x18c>)
 800025c:	4293      	cmp	r3, r2
 800025e:	d106      	bne.n	800026e <GPIO_PeriClockControl+0x6a>
			GPIOD_PCLK_EN();
 8000260:	4b48      	ldr	r3, [pc, #288]	; (8000384 <GPIO_PeriClockControl+0x180>)
 8000262:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000264:	4a47      	ldr	r2, [pc, #284]	; (8000384 <GPIO_PeriClockControl+0x180>)
 8000266:	f043 0308 	orr.w	r3, r3, #8
 800026a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800026c:	e082      	b.n	8000374 <GPIO_PeriClockControl+0x170>
		}else if(pGPIOx == GPIOE){
 800026e:	687b      	ldr	r3, [r7, #4]
 8000270:	4a48      	ldr	r2, [pc, #288]	; (8000394 <GPIO_PeriClockControl+0x190>)
 8000272:	4293      	cmp	r3, r2
 8000274:	d106      	bne.n	8000284 <GPIO_PeriClockControl+0x80>
			GPIOE_PCLK_EN();
 8000276:	4b43      	ldr	r3, [pc, #268]	; (8000384 <GPIO_PeriClockControl+0x180>)
 8000278:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800027a:	4a42      	ldr	r2, [pc, #264]	; (8000384 <GPIO_PeriClockControl+0x180>)
 800027c:	f043 0310 	orr.w	r3, r3, #16
 8000280:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000282:	e077      	b.n	8000374 <GPIO_PeriClockControl+0x170>
		}else if(pGPIOx == GPIOF){
 8000284:	687b      	ldr	r3, [r7, #4]
 8000286:	4a44      	ldr	r2, [pc, #272]	; (8000398 <GPIO_PeriClockControl+0x194>)
 8000288:	4293      	cmp	r3, r2
 800028a:	d106      	bne.n	800029a <GPIO_PeriClockControl+0x96>
			GPIOF_PCLK_EN();
 800028c:	4b3d      	ldr	r3, [pc, #244]	; (8000384 <GPIO_PeriClockControl+0x180>)
 800028e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000290:	4a3c      	ldr	r2, [pc, #240]	; (8000384 <GPIO_PeriClockControl+0x180>)
 8000292:	f043 0320 	orr.w	r3, r3, #32
 8000296:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000298:	e06c      	b.n	8000374 <GPIO_PeriClockControl+0x170>
		}else if(pGPIOx == GPIOG){
 800029a:	687b      	ldr	r3, [r7, #4]
 800029c:	4a3f      	ldr	r2, [pc, #252]	; (800039c <GPIO_PeriClockControl+0x198>)
 800029e:	4293      	cmp	r3, r2
 80002a0:	d106      	bne.n	80002b0 <GPIO_PeriClockControl+0xac>
			GPIOG_PCLK_EN();
 80002a2:	4b38      	ldr	r3, [pc, #224]	; (8000384 <GPIO_PeriClockControl+0x180>)
 80002a4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002a6:	4a37      	ldr	r2, [pc, #220]	; (8000384 <GPIO_PeriClockControl+0x180>)
 80002a8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80002ac:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002ae:	e061      	b.n	8000374 <GPIO_PeriClockControl+0x170>
		}else if(pGPIOx == GPIOH){
 80002b0:	687b      	ldr	r3, [r7, #4]
 80002b2:	4a3b      	ldr	r2, [pc, #236]	; (80003a0 <GPIO_PeriClockControl+0x19c>)
 80002b4:	4293      	cmp	r3, r2
 80002b6:	d15d      	bne.n	8000374 <GPIO_PeriClockControl+0x170>
			GPIOH_PCLK_EN();
 80002b8:	4b32      	ldr	r3, [pc, #200]	; (8000384 <GPIO_PeriClockControl+0x180>)
 80002ba:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002bc:	4a31      	ldr	r2, [pc, #196]	; (8000384 <GPIO_PeriClockControl+0x180>)
 80002be:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80002c2:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002c4:	e056      	b.n	8000374 <GPIO_PeriClockControl+0x170>
		if(pGPIOx == GPIOA){
 80002c6:	687b      	ldr	r3, [r7, #4]
 80002c8:	4a2d      	ldr	r2, [pc, #180]	; (8000380 <GPIO_PeriClockControl+0x17c>)
 80002ca:	4293      	cmp	r3, r2
 80002cc:	d106      	bne.n	80002dc <GPIO_PeriClockControl+0xd8>
			GPIOA_PCLK_DI();
 80002ce:	4b2d      	ldr	r3, [pc, #180]	; (8000384 <GPIO_PeriClockControl+0x180>)
 80002d0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002d2:	4a2c      	ldr	r2, [pc, #176]	; (8000384 <GPIO_PeriClockControl+0x180>)
 80002d4:	f023 0301 	bic.w	r3, r3, #1
 80002d8:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002da:	e04b      	b.n	8000374 <GPIO_PeriClockControl+0x170>
		}else if(pGPIOx == GPIOB){
 80002dc:	687b      	ldr	r3, [r7, #4]
 80002de:	4a2a      	ldr	r2, [pc, #168]	; (8000388 <GPIO_PeriClockControl+0x184>)
 80002e0:	4293      	cmp	r3, r2
 80002e2:	d106      	bne.n	80002f2 <GPIO_PeriClockControl+0xee>
			GPIOB_PCLK_DI();
 80002e4:	4b27      	ldr	r3, [pc, #156]	; (8000384 <GPIO_PeriClockControl+0x180>)
 80002e6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002e8:	4a26      	ldr	r2, [pc, #152]	; (8000384 <GPIO_PeriClockControl+0x180>)
 80002ea:	f023 0302 	bic.w	r3, r3, #2
 80002ee:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002f0:	e040      	b.n	8000374 <GPIO_PeriClockControl+0x170>
		}else if(pGPIOx == GPIOC){
 80002f2:	687b      	ldr	r3, [r7, #4]
 80002f4:	4a25      	ldr	r2, [pc, #148]	; (800038c <GPIO_PeriClockControl+0x188>)
 80002f6:	4293      	cmp	r3, r2
 80002f8:	d106      	bne.n	8000308 <GPIO_PeriClockControl+0x104>
			GPIOC_PCLK_DI();
 80002fa:	4b22      	ldr	r3, [pc, #136]	; (8000384 <GPIO_PeriClockControl+0x180>)
 80002fc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002fe:	4a21      	ldr	r2, [pc, #132]	; (8000384 <GPIO_PeriClockControl+0x180>)
 8000300:	f023 0304 	bic.w	r3, r3, #4
 8000304:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000306:	e035      	b.n	8000374 <GPIO_PeriClockControl+0x170>
		}else if(pGPIOx == GPIOD){
 8000308:	687b      	ldr	r3, [r7, #4]
 800030a:	4a21      	ldr	r2, [pc, #132]	; (8000390 <GPIO_PeriClockControl+0x18c>)
 800030c:	4293      	cmp	r3, r2
 800030e:	d106      	bne.n	800031e <GPIO_PeriClockControl+0x11a>
			GPIOD_PCLK_DI();
 8000310:	4b1c      	ldr	r3, [pc, #112]	; (8000384 <GPIO_PeriClockControl+0x180>)
 8000312:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000314:	4a1b      	ldr	r2, [pc, #108]	; (8000384 <GPIO_PeriClockControl+0x180>)
 8000316:	f023 0308 	bic.w	r3, r3, #8
 800031a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800031c:	e02a      	b.n	8000374 <GPIO_PeriClockControl+0x170>
		}else if(pGPIOx == GPIOE){
 800031e:	687b      	ldr	r3, [r7, #4]
 8000320:	4a1c      	ldr	r2, [pc, #112]	; (8000394 <GPIO_PeriClockControl+0x190>)
 8000322:	4293      	cmp	r3, r2
 8000324:	d106      	bne.n	8000334 <GPIO_PeriClockControl+0x130>
			GPIOE_PCLK_DI();
 8000326:	4b17      	ldr	r3, [pc, #92]	; (8000384 <GPIO_PeriClockControl+0x180>)
 8000328:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800032a:	4a16      	ldr	r2, [pc, #88]	; (8000384 <GPIO_PeriClockControl+0x180>)
 800032c:	f023 0310 	bic.w	r3, r3, #16
 8000330:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000332:	e01f      	b.n	8000374 <GPIO_PeriClockControl+0x170>
		}else if(pGPIOx == GPIOF){
 8000334:	687b      	ldr	r3, [r7, #4]
 8000336:	4a18      	ldr	r2, [pc, #96]	; (8000398 <GPIO_PeriClockControl+0x194>)
 8000338:	4293      	cmp	r3, r2
 800033a:	d106      	bne.n	800034a <GPIO_PeriClockControl+0x146>
			GPIOF_PCLK_DI();
 800033c:	4b11      	ldr	r3, [pc, #68]	; (8000384 <GPIO_PeriClockControl+0x180>)
 800033e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000340:	4a10      	ldr	r2, [pc, #64]	; (8000384 <GPIO_PeriClockControl+0x180>)
 8000342:	f023 0320 	bic.w	r3, r3, #32
 8000346:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000348:	e014      	b.n	8000374 <GPIO_PeriClockControl+0x170>
		}else if(pGPIOx == GPIOG){
 800034a:	687b      	ldr	r3, [r7, #4]
 800034c:	4a13      	ldr	r2, [pc, #76]	; (800039c <GPIO_PeriClockControl+0x198>)
 800034e:	4293      	cmp	r3, r2
 8000350:	d106      	bne.n	8000360 <GPIO_PeriClockControl+0x15c>
			GPIOG_PCLK_DI();
 8000352:	4b0c      	ldr	r3, [pc, #48]	; (8000384 <GPIO_PeriClockControl+0x180>)
 8000354:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000356:	4a0b      	ldr	r2, [pc, #44]	; (8000384 <GPIO_PeriClockControl+0x180>)
 8000358:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800035c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800035e:	e009      	b.n	8000374 <GPIO_PeriClockControl+0x170>
		}else if(pGPIOx == GPIOH){
 8000360:	687b      	ldr	r3, [r7, #4]
 8000362:	4a0f      	ldr	r2, [pc, #60]	; (80003a0 <GPIO_PeriClockControl+0x19c>)
 8000364:	4293      	cmp	r3, r2
 8000366:	d105      	bne.n	8000374 <GPIO_PeriClockControl+0x170>
			GPIOH_PCLK_DI();
 8000368:	4b06      	ldr	r3, [pc, #24]	; (8000384 <GPIO_PeriClockControl+0x180>)
 800036a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800036c:	4a05      	ldr	r2, [pc, #20]	; (8000384 <GPIO_PeriClockControl+0x180>)
 800036e:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8000372:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000374:	bf00      	nop
 8000376:	370c      	adds	r7, #12
 8000378:	46bd      	mov	sp, r7
 800037a:	bc80      	pop	{r7}
 800037c:	4770      	bx	lr
 800037e:	bf00      	nop
 8000380:	40020000 	.word	0x40020000
 8000384:	40023800 	.word	0x40023800
 8000388:	40020400 	.word	0x40020400
 800038c:	40020800 	.word	0x40020800
 8000390:	40020c00 	.word	0x40020c00
 8000394:	40021000 	.word	0x40021000
 8000398:	40021400 	.word	0x40021400
 800039c:	40021800 	.word	0x40021800
 80003a0:	40021c00 	.word	0x40021c00

080003a4 <GPIO_Init>:


/*
 * Initialize and De-Initialize
 */
void GPIO_Init(GPIO_Handle_t *pGPIOHandle){
 80003a4:	b480      	push	{r7}
 80003a6:	b085      	sub	sp, #20
 80003a8:	af00      	add	r7, sp, #0
 80003aa:	6078      	str	r0, [r7, #4]
	uint32_t temp = 0; // Temporary Register
 80003ac:	2300      	movs	r3, #0
 80003ae:	60fb      	str	r3, [r7, #12]

	// 1. Configure Mode of GPIO Pin
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG){
 80003b0:	687b      	ldr	r3, [r7, #4]
 80003b2:	795b      	ldrb	r3, [r3, #5]
 80003b4:	2b03      	cmp	r3, #3
 80003b6:	d820      	bhi.n	80003fa <GPIO_Init+0x56>
		temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80003b8:	687b      	ldr	r3, [r7, #4]
 80003ba:	795b      	ldrb	r3, [r3, #5]
 80003bc:	461a      	mov	r2, r3
 80003be:	687b      	ldr	r3, [r7, #4]
 80003c0:	791b      	ldrb	r3, [r3, #4]
 80003c2:	005b      	lsls	r3, r3, #1
 80003c4:	fa02 f303 	lsl.w	r3, r2, r3
 80003c8:	60fb      	str	r3, [r7, #12]
		pGPIOHandle->pGPIOx->MODER &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); // Clear
 80003ca:	687b      	ldr	r3, [r7, #4]
 80003cc:	681b      	ldr	r3, [r3, #0]
 80003ce:	681a      	ldr	r2, [r3, #0]
 80003d0:	687b      	ldr	r3, [r7, #4]
 80003d2:	791b      	ldrb	r3, [r3, #4]
 80003d4:	4619      	mov	r1, r3
 80003d6:	2303      	movs	r3, #3
 80003d8:	408b      	lsls	r3, r1
 80003da:	43db      	mvns	r3, r3
 80003dc:	4619      	mov	r1, r3
 80003de:	687b      	ldr	r3, [r7, #4]
 80003e0:	681b      	ldr	r3, [r3, #0]
 80003e2:	400a      	ands	r2, r1
 80003e4:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp; // Set
 80003e6:	687b      	ldr	r3, [r7, #4]
 80003e8:	681b      	ldr	r3, [r3, #0]
 80003ea:	6819      	ldr	r1, [r3, #0]
 80003ec:	687b      	ldr	r3, [r7, #4]
 80003ee:	681b      	ldr	r3, [r3, #0]
 80003f0:	68fa      	ldr	r2, [r7, #12]
 80003f2:	430a      	orrs	r2, r1
 80003f4:	601a      	str	r2, [r3, #0]
		temp = 0;
 80003f6:	2300      	movs	r3, #0
 80003f8:	60fb      	str	r3, [r7, #12]
	}else{
		// TODO: Interrupt Mode
	}

	// 2. Configure Speed
	temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80003fa:	687b      	ldr	r3, [r7, #4]
 80003fc:	799b      	ldrb	r3, [r3, #6]
 80003fe:	461a      	mov	r2, r3
 8000400:	687b      	ldr	r3, [r7, #4]
 8000402:	791b      	ldrb	r3, [r3, #4]
 8000404:	005b      	lsls	r3, r3, #1
 8000406:	fa02 f303 	lsl.w	r3, r2, r3
 800040a:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->OSPEEDR &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); // Clear
 800040c:	687b      	ldr	r3, [r7, #4]
 800040e:	681b      	ldr	r3, [r3, #0]
 8000410:	689a      	ldr	r2, [r3, #8]
 8000412:	687b      	ldr	r3, [r7, #4]
 8000414:	791b      	ldrb	r3, [r3, #4]
 8000416:	4619      	mov	r1, r3
 8000418:	2303      	movs	r3, #3
 800041a:	408b      	lsls	r3, r1
 800041c:	43db      	mvns	r3, r3
 800041e:	4619      	mov	r1, r3
 8000420:	687b      	ldr	r3, [r7, #4]
 8000422:	681b      	ldr	r3, [r3, #0]
 8000424:	400a      	ands	r2, r1
 8000426:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 8000428:	687b      	ldr	r3, [r7, #4]
 800042a:	681b      	ldr	r3, [r3, #0]
 800042c:	6899      	ldr	r1, [r3, #8]
 800042e:	687b      	ldr	r3, [r7, #4]
 8000430:	681b      	ldr	r3, [r3, #0]
 8000432:	68fa      	ldr	r2, [r7, #12]
 8000434:	430a      	orrs	r2, r1
 8000436:	609a      	str	r2, [r3, #8]
	temp = 0;
 8000438:	2300      	movs	r3, #0
 800043a:	60fb      	str	r3, [r7, #12]

	// 3. Configure Pull-up Pull-down Settings
	temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800043c:	687b      	ldr	r3, [r7, #4]
 800043e:	79db      	ldrb	r3, [r3, #7]
 8000440:	461a      	mov	r2, r3
 8000442:	687b      	ldr	r3, [r7, #4]
 8000444:	791b      	ldrb	r3, [r3, #4]
 8000446:	005b      	lsls	r3, r3, #1
 8000448:	fa02 f303 	lsl.w	r3, r2, r3
 800044c:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->PUPDR &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); // Clear
 800044e:	687b      	ldr	r3, [r7, #4]
 8000450:	681b      	ldr	r3, [r3, #0]
 8000452:	68da      	ldr	r2, [r3, #12]
 8000454:	687b      	ldr	r3, [r7, #4]
 8000456:	791b      	ldrb	r3, [r3, #4]
 8000458:	4619      	mov	r1, r3
 800045a:	2303      	movs	r3, #3
 800045c:	408b      	lsls	r3, r1
 800045e:	43db      	mvns	r3, r3
 8000460:	4619      	mov	r1, r3
 8000462:	687b      	ldr	r3, [r7, #4]
 8000464:	681b      	ldr	r3, [r3, #0]
 8000466:	400a      	ands	r2, r1
 8000468:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 800046a:	687b      	ldr	r3, [r7, #4]
 800046c:	681b      	ldr	r3, [r3, #0]
 800046e:	68d9      	ldr	r1, [r3, #12]
 8000470:	687b      	ldr	r3, [r7, #4]
 8000472:	681b      	ldr	r3, [r3, #0]
 8000474:	68fa      	ldr	r2, [r7, #12]
 8000476:	430a      	orrs	r2, r1
 8000478:	60da      	str	r2, [r3, #12]
	temp = 0;
 800047a:	2300      	movs	r3, #0
 800047c:	60fb      	str	r3, [r7, #12]

	// 4. Configure the Output Type
	temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber;
 800047e:	687b      	ldr	r3, [r7, #4]
 8000480:	7a1b      	ldrb	r3, [r3, #8]
 8000482:	461a      	mov	r2, r3
 8000484:	687b      	ldr	r3, [r7, #4]
 8000486:	791b      	ldrb	r3, [r3, #4]
 8000488:	fa02 f303 	lsl.w	r3, r2, r3
 800048c:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->OTYPER &= ~(0x1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); // Clear
 800048e:	687b      	ldr	r3, [r7, #4]
 8000490:	681b      	ldr	r3, [r3, #0]
 8000492:	685a      	ldr	r2, [r3, #4]
 8000494:	687b      	ldr	r3, [r7, #4]
 8000496:	791b      	ldrb	r3, [r3, #4]
 8000498:	4619      	mov	r1, r3
 800049a:	2301      	movs	r3, #1
 800049c:	408b      	lsls	r3, r1
 800049e:	43db      	mvns	r3, r3
 80004a0:	4619      	mov	r1, r3
 80004a2:	687b      	ldr	r3, [r7, #4]
 80004a4:	681b      	ldr	r3, [r3, #0]
 80004a6:	400a      	ands	r2, r1
 80004a8:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 80004aa:	687b      	ldr	r3, [r7, #4]
 80004ac:	681b      	ldr	r3, [r3, #0]
 80004ae:	6859      	ldr	r1, [r3, #4]
 80004b0:	687b      	ldr	r3, [r7, #4]
 80004b2:	681b      	ldr	r3, [r3, #0]
 80004b4:	68fa      	ldr	r2, [r7, #12]
 80004b6:	430a      	orrs	r2, r1
 80004b8:	605a      	str	r2, [r3, #4]
	temp = 0;
 80004ba:	2300      	movs	r3, #0
 80004bc:	60fb      	str	r3, [r7, #12]

	// 5. Configure Alternate Functionality
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFUN){
 80004be:	687b      	ldr	r3, [r7, #4]
 80004c0:	795b      	ldrb	r3, [r3, #5]
 80004c2:	2b02      	cmp	r3, #2
 80004c4:	d150      	bne.n	8000568 <GPIO_Init+0x1c4>
		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber <= GPIO_PIN_NO_7){
 80004c6:	687b      	ldr	r3, [r7, #4]
 80004c8:	791b      	ldrb	r3, [r3, #4]
 80004ca:	2b07      	cmp	r3, #7
 80004cc:	d826      	bhi.n	800051c <GPIO_Init+0x178>
				// AFRL Registers
				temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4 * (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 8));
 80004ce:	687b      	ldr	r3, [r7, #4]
 80004d0:	7a5b      	ldrb	r3, [r3, #9]
 80004d2:	461a      	mov	r2, r3
 80004d4:	687b      	ldr	r3, [r7, #4]
 80004d6:	791b      	ldrb	r3, [r3, #4]
 80004d8:	f003 0307 	and.w	r3, r3, #7
 80004dc:	009b      	lsls	r3, r3, #2
 80004de:	fa02 f303 	lsl.w	r3, r2, r3
 80004e2:	60fb      	str	r3, [r7, #12]
				pGPIOHandle->pGPIOx->AFRL &= ~(0xF << (4 * (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 8))); // Clear
 80004e4:	687b      	ldr	r3, [r7, #4]
 80004e6:	681b      	ldr	r3, [r3, #0]
 80004e8:	6a1a      	ldr	r2, [r3, #32]
 80004ea:	687b      	ldr	r3, [r7, #4]
 80004ec:	791b      	ldrb	r3, [r3, #4]
 80004ee:	f003 0307 	and.w	r3, r3, #7
 80004f2:	009b      	lsls	r3, r3, #2
 80004f4:	210f      	movs	r1, #15
 80004f6:	fa01 f303 	lsl.w	r3, r1, r3
 80004fa:	43db      	mvns	r3, r3
 80004fc:	4619      	mov	r1, r3
 80004fe:	687b      	ldr	r3, [r7, #4]
 8000500:	681b      	ldr	r3, [r3, #0]
 8000502:	400a      	ands	r2, r1
 8000504:	621a      	str	r2, [r3, #32]
				pGPIOHandle->pGPIOx->AFRL |= temp;
 8000506:	687b      	ldr	r3, [r7, #4]
 8000508:	681b      	ldr	r3, [r3, #0]
 800050a:	6a19      	ldr	r1, [r3, #32]
 800050c:	687b      	ldr	r3, [r7, #4]
 800050e:	681b      	ldr	r3, [r3, #0]
 8000510:	68fa      	ldr	r2, [r7, #12]
 8000512:	430a      	orrs	r2, r1
 8000514:	621a      	str	r2, [r3, #32]
				temp = 0;
 8000516:	2300      	movs	r3, #0
 8000518:	60fb      	str	r3, [r7, #12]
				pGPIOHandle->pGPIOx->AFRH |= temp;
				temp = 0;
			}
	}

}
 800051a:	e025      	b.n	8000568 <GPIO_Init+0x1c4>
				temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4 * (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 8));
 800051c:	687b      	ldr	r3, [r7, #4]
 800051e:	7a5b      	ldrb	r3, [r3, #9]
 8000520:	461a      	mov	r2, r3
 8000522:	687b      	ldr	r3, [r7, #4]
 8000524:	791b      	ldrb	r3, [r3, #4]
 8000526:	f003 0307 	and.w	r3, r3, #7
 800052a:	009b      	lsls	r3, r3, #2
 800052c:	fa02 f303 	lsl.w	r3, r2, r3
 8000530:	60fb      	str	r3, [r7, #12]
				pGPIOHandle->pGPIOx->AFRH &= ~(0xF << (4 * (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 8))); // Clear
 8000532:	687b      	ldr	r3, [r7, #4]
 8000534:	681b      	ldr	r3, [r3, #0]
 8000536:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8000538:	687b      	ldr	r3, [r7, #4]
 800053a:	791b      	ldrb	r3, [r3, #4]
 800053c:	f003 0307 	and.w	r3, r3, #7
 8000540:	009b      	lsls	r3, r3, #2
 8000542:	210f      	movs	r1, #15
 8000544:	fa01 f303 	lsl.w	r3, r1, r3
 8000548:	43db      	mvns	r3, r3
 800054a:	4619      	mov	r1, r3
 800054c:	687b      	ldr	r3, [r7, #4]
 800054e:	681b      	ldr	r3, [r3, #0]
 8000550:	400a      	ands	r2, r1
 8000552:	625a      	str	r2, [r3, #36]	; 0x24
				pGPIOHandle->pGPIOx->AFRH |= temp;
 8000554:	687b      	ldr	r3, [r7, #4]
 8000556:	681b      	ldr	r3, [r3, #0]
 8000558:	6a59      	ldr	r1, [r3, #36]	; 0x24
 800055a:	687b      	ldr	r3, [r7, #4]
 800055c:	681b      	ldr	r3, [r3, #0]
 800055e:	68fa      	ldr	r2, [r7, #12]
 8000560:	430a      	orrs	r2, r1
 8000562:	625a      	str	r2, [r3, #36]	; 0x24
				temp = 0;
 8000564:	2300      	movs	r3, #0
 8000566:	60fb      	str	r3, [r7, #12]
}
 8000568:	bf00      	nop
 800056a:	3714      	adds	r7, #20
 800056c:	46bd      	mov	sp, r7
 800056e:	bc80      	pop	{r7}
 8000570:	4770      	bx	lr

08000572 <GPIO_ToggleOutputPin>:

void GPIO_WriteToOutputPort(GPIO_RegDef_t *pGPIOx, uint16_t Value){
	pGPIOx->ODR = Value;
}

void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber){
 8000572:	b480      	push	{r7}
 8000574:	b083      	sub	sp, #12
 8000576:	af00      	add	r7, sp, #0
 8000578:	6078      	str	r0, [r7, #4]
 800057a:	460b      	mov	r3, r1
 800057c:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR ^= (1 << PinNumber);
 800057e:	687b      	ldr	r3, [r7, #4]
 8000580:	695b      	ldr	r3, [r3, #20]
 8000582:	78fa      	ldrb	r2, [r7, #3]
 8000584:	2101      	movs	r1, #1
 8000586:	fa01 f202 	lsl.w	r2, r1, r2
 800058a:	405a      	eors	r2, r3
 800058c:	687b      	ldr	r3, [r7, #4]
 800058e:	615a      	str	r2, [r3, #20]
}
 8000590:	bf00      	nop
 8000592:	370c      	adds	r7, #12
 8000594:	46bd      	mov	sp, r7
 8000596:	bc80      	pop	{r7}
 8000598:	4770      	bx	lr
	...

0800059c <delay>:
 */

#include "stm32f446xx.h"


void delay(void){
 800059c:	b480      	push	{r7}
 800059e:	b083      	sub	sp, #12
 80005a0:	af00      	add	r7, sp, #0
	for(uint32_t i=0; i<500000/2; i++){
 80005a2:	2300      	movs	r3, #0
 80005a4:	607b      	str	r3, [r7, #4]
 80005a6:	e002      	b.n	80005ae <delay+0x12>
 80005a8:	687b      	ldr	r3, [r7, #4]
 80005aa:	3301      	adds	r3, #1
 80005ac:	607b      	str	r3, [r7, #4]
 80005ae:	687b      	ldr	r3, [r7, #4]
 80005b0:	4a04      	ldr	r2, [pc, #16]	; (80005c4 <delay+0x28>)
 80005b2:	4293      	cmp	r3, r2
 80005b4:	d9f8      	bls.n	80005a8 <delay+0xc>

	}
}
 80005b6:	bf00      	nop
 80005b8:	bf00      	nop
 80005ba:	370c      	adds	r7, #12
 80005bc:	46bd      	mov	sp, r7
 80005be:	bc80      	pop	{r7}
 80005c0:	4770      	bx	lr
 80005c2:	bf00      	nop
 80005c4:	0003d08f 	.word	0x0003d08f

080005c8 <main>:



int main(void){
 80005c8:	b580      	push	{r7, lr}
 80005ca:	b084      	sub	sp, #16
 80005cc:	af00      	add	r7, sp, #0

	GPIO_Handle_t GpioLed;

	// Set the Port and Pin Configurations
	GpioLed.pGPIOx = GPIOA;
 80005ce:	4b0e      	ldr	r3, [pc, #56]	; (8000608 <main+0x40>)
 80005d0:	607b      	str	r3, [r7, #4]
	GpioLed.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_5;
 80005d2:	2305      	movs	r3, #5
 80005d4:	723b      	strb	r3, [r7, #8]
	GpioLed.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUTPUT;
 80005d6:	2301      	movs	r3, #1
 80005d8:	727b      	strb	r3, [r7, #9]
	GpioLed.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 80005da:	2300      	movs	r3, #0
 80005dc:	733b      	strb	r3, [r7, #12]
	GpioLed.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 80005de:	2302      	movs	r3, #2
 80005e0:	72bb      	strb	r3, [r7, #10]
	GpioLed.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 80005e2:	2300      	movs	r3, #0
 80005e4:	72fb      	strb	r3, [r7, #11]

	// Enable the Port Clock
	GPIO_PeriClockControl(GPIOA, ENABLE);
 80005e6:	2101      	movs	r1, #1
 80005e8:	4807      	ldr	r0, [pc, #28]	; (8000608 <main+0x40>)
 80005ea:	f7ff fe0b 	bl	8000204 <GPIO_PeriClockControl>

	// Initialize
	GPIO_Init(&GpioLed);
 80005ee:	1d3b      	adds	r3, r7, #4
 80005f0:	4618      	mov	r0, r3
 80005f2:	f7ff fed7 	bl	80003a4 <GPIO_Init>

	while(1){
		GPIO_ToggleOutputPin(GpioLed.pGPIOx, GpioLed.GPIO_PinConfig.GPIO_PinNumber);
 80005f6:	687b      	ldr	r3, [r7, #4]
 80005f8:	7a3a      	ldrb	r2, [r7, #8]
 80005fa:	4611      	mov	r1, r2
 80005fc:	4618      	mov	r0, r3
 80005fe:	f7ff ffb8 	bl	8000572 <GPIO_ToggleOutputPin>
		delay();
 8000602:	f7ff ffcb 	bl	800059c <delay>
		GPIO_ToggleOutputPin(GpioLed.pGPIOx, GpioLed.GPIO_PinConfig.GPIO_PinNumber);
 8000606:	e7f6      	b.n	80005f6 <main+0x2e>
 8000608:	40020000 	.word	0x40020000

0800060c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800060c:	480d      	ldr	r0, [pc, #52]	; (8000644 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800060e:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000610:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000614:	480c      	ldr	r0, [pc, #48]	; (8000648 <LoopForever+0x6>)
  ldr r1, =_edata
 8000616:	490d      	ldr	r1, [pc, #52]	; (800064c <LoopForever+0xa>)
  ldr r2, =_sidata
 8000618:	4a0d      	ldr	r2, [pc, #52]	; (8000650 <LoopForever+0xe>)
  movs r3, #0
 800061a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800061c:	e002      	b.n	8000624 <LoopCopyDataInit>

0800061e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800061e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000620:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000622:	3304      	adds	r3, #4

08000624 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000624:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000626:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000628:	d3f9      	bcc.n	800061e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800062a:	4a0a      	ldr	r2, [pc, #40]	; (8000654 <LoopForever+0x12>)
  ldr r4, =_ebss
 800062c:	4c0a      	ldr	r4, [pc, #40]	; (8000658 <LoopForever+0x16>)
  movs r3, #0
 800062e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000630:	e001      	b.n	8000636 <LoopFillZerobss>

08000632 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000632:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000634:	3204      	adds	r2, #4

08000636 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000636:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000638:	d3fb      	bcc.n	8000632 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800063a:	f000 f811 	bl	8000660 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800063e:	f7ff ffc3 	bl	80005c8 <main>

08000642 <LoopForever>:

LoopForever:
  b LoopForever
 8000642:	e7fe      	b.n	8000642 <LoopForever>
  ldr   r0, =_estack
 8000644:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000648:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800064c:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000650:	080006c8 	.word	0x080006c8
  ldr r2, =_sbss
 8000654:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000658:	2000001c 	.word	0x2000001c

0800065c <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800065c:	e7fe      	b.n	800065c <ADC_IRQHandler>
	...

08000660 <__libc_init_array>:
 8000660:	b570      	push	{r4, r5, r6, lr}
 8000662:	4d0d      	ldr	r5, [pc, #52]	; (8000698 <__libc_init_array+0x38>)
 8000664:	4c0d      	ldr	r4, [pc, #52]	; (800069c <__libc_init_array+0x3c>)
 8000666:	1b64      	subs	r4, r4, r5
 8000668:	10a4      	asrs	r4, r4, #2
 800066a:	2600      	movs	r6, #0
 800066c:	42a6      	cmp	r6, r4
 800066e:	d109      	bne.n	8000684 <__libc_init_array+0x24>
 8000670:	4d0b      	ldr	r5, [pc, #44]	; (80006a0 <__libc_init_array+0x40>)
 8000672:	4c0c      	ldr	r4, [pc, #48]	; (80006a4 <__libc_init_array+0x44>)
 8000674:	f000 f818 	bl	80006a8 <_init>
 8000678:	1b64      	subs	r4, r4, r5
 800067a:	10a4      	asrs	r4, r4, #2
 800067c:	2600      	movs	r6, #0
 800067e:	42a6      	cmp	r6, r4
 8000680:	d105      	bne.n	800068e <__libc_init_array+0x2e>
 8000682:	bd70      	pop	{r4, r5, r6, pc}
 8000684:	f855 3b04 	ldr.w	r3, [r5], #4
 8000688:	4798      	blx	r3
 800068a:	3601      	adds	r6, #1
 800068c:	e7ee      	b.n	800066c <__libc_init_array+0xc>
 800068e:	f855 3b04 	ldr.w	r3, [r5], #4
 8000692:	4798      	blx	r3
 8000694:	3601      	adds	r6, #1
 8000696:	e7f2      	b.n	800067e <__libc_init_array+0x1e>
 8000698:	080006c0 	.word	0x080006c0
 800069c:	080006c0 	.word	0x080006c0
 80006a0:	080006c0 	.word	0x080006c0
 80006a4:	080006c4 	.word	0x080006c4

080006a8 <_init>:
 80006a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80006aa:	bf00      	nop
 80006ac:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80006ae:	bc08      	pop	{r3}
 80006b0:	469e      	mov	lr, r3
 80006b2:	4770      	bx	lr

080006b4 <_fini>:
 80006b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80006b6:	bf00      	nop
 80006b8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80006ba:	bc08      	pop	{r3}
 80006bc:	469e      	mov	lr, r3
 80006be:	4770      	bx	lr
