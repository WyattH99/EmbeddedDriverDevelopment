
008_stm32f4xx_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000890  080001c4  080001c4  000101c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000a54  08000a5c  00010a5c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000a54  08000a54  00010a5c  2**0
                  CONTENTS
  4 .ARM          00000000  08000a54  08000a54  00010a5c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000a54  08000a5c  00010a5c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000a54  08000a54  00010a54  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000a58  08000a58  00010a58  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010a5c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000a5c  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000a5c  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  00010a5c  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  00010a86  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000a3f  00000000  00000000  00010ac9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 0000024b  00000000  00000000  00011508  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000c8  00000000  00000000  00011758  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 0000008c  00000000  00000000  00011820  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00001f39  00000000  00000000  000118ac  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000f77  00000000  00000000  000137e5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00008a96  00000000  00000000  0001475c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  00000288  00000000  00000000  0001d1f4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000006d  00000000  00000000  0001d47c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c4 <__do_global_dtors_aux>:
 80001c4:	b510      	push	{r4, lr}
 80001c6:	4c05      	ldr	r4, [pc, #20]	; (80001dc <__do_global_dtors_aux+0x18>)
 80001c8:	7823      	ldrb	r3, [r4, #0]
 80001ca:	b933      	cbnz	r3, 80001da <__do_global_dtors_aux+0x16>
 80001cc:	4b04      	ldr	r3, [pc, #16]	; (80001e0 <__do_global_dtors_aux+0x1c>)
 80001ce:	b113      	cbz	r3, 80001d6 <__do_global_dtors_aux+0x12>
 80001d0:	4804      	ldr	r0, [pc, #16]	; (80001e4 <__do_global_dtors_aux+0x20>)
 80001d2:	f3af 8000 	nop.w
 80001d6:	2301      	movs	r3, #1
 80001d8:	7023      	strb	r3, [r4, #0]
 80001da:	bd10      	pop	{r4, pc}
 80001dc:	20000000 	.word	0x20000000
 80001e0:	00000000 	.word	0x00000000
 80001e4:	08000a3c 	.word	0x08000a3c

080001e8 <frame_dummy>:
 80001e8:	b508      	push	{r3, lr}
 80001ea:	4b03      	ldr	r3, [pc, #12]	; (80001f8 <frame_dummy+0x10>)
 80001ec:	b11b      	cbz	r3, 80001f6 <frame_dummy+0xe>
 80001ee:	4903      	ldr	r1, [pc, #12]	; (80001fc <frame_dummy+0x14>)
 80001f0:	4803      	ldr	r0, [pc, #12]	; (8000200 <frame_dummy+0x18>)
 80001f2:	f3af 8000 	nop.w
 80001f6:	bd08      	pop	{r3, pc}
 80001f8:	00000000 	.word	0x00000000
 80001fc:	20000004 	.word	0x20000004
 8000200:	08000a3c 	.word	0x08000a3c

08000204 <GPIO_PeriClockControl>:
 * @return            -  void
 *
 * @Note              -  none

 */
void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnOrDi){
 8000204:	b480      	push	{r7}
 8000206:	b083      	sub	sp, #12
 8000208:	af00      	add	r7, sp, #0
 800020a:	6078      	str	r0, [r7, #4]
 800020c:	460b      	mov	r3, r1
 800020e:	70fb      	strb	r3, [r7, #3]
	if(EnOrDi == ENABLE){ // Enable
 8000210:	78fb      	ldrb	r3, [r7, #3]
 8000212:	2b01      	cmp	r3, #1
 8000214:	d157      	bne.n	80002c6 <GPIO_PeriClockControl+0xc2>
		if(pGPIOx == GPIOA){
 8000216:	687b      	ldr	r3, [r7, #4]
 8000218:	4a59      	ldr	r2, [pc, #356]	; (8000380 <GPIO_PeriClockControl+0x17c>)
 800021a:	4293      	cmp	r3, r2
 800021c:	d106      	bne.n	800022c <GPIO_PeriClockControl+0x28>
			GPIOA_PCLK_EN();
 800021e:	4b59      	ldr	r3, [pc, #356]	; (8000384 <GPIO_PeriClockControl+0x180>)
 8000220:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000222:	4a58      	ldr	r2, [pc, #352]	; (8000384 <GPIO_PeriClockControl+0x180>)
 8000224:	f043 0301 	orr.w	r3, r3, #1
 8000228:	6313      	str	r3, [r2, #48]	; 0x30
		}else if(pGPIOx == GPIOH){
			GPIOH_PCLK_DI();
		}
	}

}
 800022a:	e0a3      	b.n	8000374 <GPIO_PeriClockControl+0x170>
		}else if(pGPIOx == GPIOB){
 800022c:	687b      	ldr	r3, [r7, #4]
 800022e:	4a56      	ldr	r2, [pc, #344]	; (8000388 <GPIO_PeriClockControl+0x184>)
 8000230:	4293      	cmp	r3, r2
 8000232:	d106      	bne.n	8000242 <GPIO_PeriClockControl+0x3e>
			GPIOB_PCLK_EN();
 8000234:	4b53      	ldr	r3, [pc, #332]	; (8000384 <GPIO_PeriClockControl+0x180>)
 8000236:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000238:	4a52      	ldr	r2, [pc, #328]	; (8000384 <GPIO_PeriClockControl+0x180>)
 800023a:	f043 0302 	orr.w	r3, r3, #2
 800023e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000240:	e098      	b.n	8000374 <GPIO_PeriClockControl+0x170>
		}else if(pGPIOx == GPIOC){
 8000242:	687b      	ldr	r3, [r7, #4]
 8000244:	4a51      	ldr	r2, [pc, #324]	; (800038c <GPIO_PeriClockControl+0x188>)
 8000246:	4293      	cmp	r3, r2
 8000248:	d106      	bne.n	8000258 <GPIO_PeriClockControl+0x54>
			GPIOC_PCLK_EN();
 800024a:	4b4e      	ldr	r3, [pc, #312]	; (8000384 <GPIO_PeriClockControl+0x180>)
 800024c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800024e:	4a4d      	ldr	r2, [pc, #308]	; (8000384 <GPIO_PeriClockControl+0x180>)
 8000250:	f043 0304 	orr.w	r3, r3, #4
 8000254:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000256:	e08d      	b.n	8000374 <GPIO_PeriClockControl+0x170>
		}else if(pGPIOx == GPIOD){
 8000258:	687b      	ldr	r3, [r7, #4]
 800025a:	4a4d      	ldr	r2, [pc, #308]	; (8000390 <GPIO_PeriClockControl+0x18c>)
 800025c:	4293      	cmp	r3, r2
 800025e:	d106      	bne.n	800026e <GPIO_PeriClockControl+0x6a>
			GPIOD_PCLK_EN();
 8000260:	4b48      	ldr	r3, [pc, #288]	; (8000384 <GPIO_PeriClockControl+0x180>)
 8000262:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000264:	4a47      	ldr	r2, [pc, #284]	; (8000384 <GPIO_PeriClockControl+0x180>)
 8000266:	f043 0308 	orr.w	r3, r3, #8
 800026a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800026c:	e082      	b.n	8000374 <GPIO_PeriClockControl+0x170>
		}else if(pGPIOx == GPIOE){
 800026e:	687b      	ldr	r3, [r7, #4]
 8000270:	4a48      	ldr	r2, [pc, #288]	; (8000394 <GPIO_PeriClockControl+0x190>)
 8000272:	4293      	cmp	r3, r2
 8000274:	d106      	bne.n	8000284 <GPIO_PeriClockControl+0x80>
			GPIOE_PCLK_EN();
 8000276:	4b43      	ldr	r3, [pc, #268]	; (8000384 <GPIO_PeriClockControl+0x180>)
 8000278:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800027a:	4a42      	ldr	r2, [pc, #264]	; (8000384 <GPIO_PeriClockControl+0x180>)
 800027c:	f043 0310 	orr.w	r3, r3, #16
 8000280:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000282:	e077      	b.n	8000374 <GPIO_PeriClockControl+0x170>
		}else if(pGPIOx == GPIOF){
 8000284:	687b      	ldr	r3, [r7, #4]
 8000286:	4a44      	ldr	r2, [pc, #272]	; (8000398 <GPIO_PeriClockControl+0x194>)
 8000288:	4293      	cmp	r3, r2
 800028a:	d106      	bne.n	800029a <GPIO_PeriClockControl+0x96>
			GPIOF_PCLK_EN();
 800028c:	4b3d      	ldr	r3, [pc, #244]	; (8000384 <GPIO_PeriClockControl+0x180>)
 800028e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000290:	4a3c      	ldr	r2, [pc, #240]	; (8000384 <GPIO_PeriClockControl+0x180>)
 8000292:	f043 0320 	orr.w	r3, r3, #32
 8000296:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000298:	e06c      	b.n	8000374 <GPIO_PeriClockControl+0x170>
		}else if(pGPIOx == GPIOG){
 800029a:	687b      	ldr	r3, [r7, #4]
 800029c:	4a3f      	ldr	r2, [pc, #252]	; (800039c <GPIO_PeriClockControl+0x198>)
 800029e:	4293      	cmp	r3, r2
 80002a0:	d106      	bne.n	80002b0 <GPIO_PeriClockControl+0xac>
			GPIOG_PCLK_EN();
 80002a2:	4b38      	ldr	r3, [pc, #224]	; (8000384 <GPIO_PeriClockControl+0x180>)
 80002a4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002a6:	4a37      	ldr	r2, [pc, #220]	; (8000384 <GPIO_PeriClockControl+0x180>)
 80002a8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80002ac:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002ae:	e061      	b.n	8000374 <GPIO_PeriClockControl+0x170>
		}else if(pGPIOx == GPIOH){
 80002b0:	687b      	ldr	r3, [r7, #4]
 80002b2:	4a3b      	ldr	r2, [pc, #236]	; (80003a0 <GPIO_PeriClockControl+0x19c>)
 80002b4:	4293      	cmp	r3, r2
 80002b6:	d15d      	bne.n	8000374 <GPIO_PeriClockControl+0x170>
			GPIOH_PCLK_EN();
 80002b8:	4b32      	ldr	r3, [pc, #200]	; (8000384 <GPIO_PeriClockControl+0x180>)
 80002ba:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002bc:	4a31      	ldr	r2, [pc, #196]	; (8000384 <GPIO_PeriClockControl+0x180>)
 80002be:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80002c2:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002c4:	e056      	b.n	8000374 <GPIO_PeriClockControl+0x170>
		if(pGPIOx == GPIOA){
 80002c6:	687b      	ldr	r3, [r7, #4]
 80002c8:	4a2d      	ldr	r2, [pc, #180]	; (8000380 <GPIO_PeriClockControl+0x17c>)
 80002ca:	4293      	cmp	r3, r2
 80002cc:	d106      	bne.n	80002dc <GPIO_PeriClockControl+0xd8>
			GPIOA_PCLK_DI();
 80002ce:	4b2d      	ldr	r3, [pc, #180]	; (8000384 <GPIO_PeriClockControl+0x180>)
 80002d0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002d2:	4a2c      	ldr	r2, [pc, #176]	; (8000384 <GPIO_PeriClockControl+0x180>)
 80002d4:	f023 0301 	bic.w	r3, r3, #1
 80002d8:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002da:	e04b      	b.n	8000374 <GPIO_PeriClockControl+0x170>
		}else if(pGPIOx == GPIOB){
 80002dc:	687b      	ldr	r3, [r7, #4]
 80002de:	4a2a      	ldr	r2, [pc, #168]	; (8000388 <GPIO_PeriClockControl+0x184>)
 80002e0:	4293      	cmp	r3, r2
 80002e2:	d106      	bne.n	80002f2 <GPIO_PeriClockControl+0xee>
			GPIOB_PCLK_DI();
 80002e4:	4b27      	ldr	r3, [pc, #156]	; (8000384 <GPIO_PeriClockControl+0x180>)
 80002e6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002e8:	4a26      	ldr	r2, [pc, #152]	; (8000384 <GPIO_PeriClockControl+0x180>)
 80002ea:	f023 0302 	bic.w	r3, r3, #2
 80002ee:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002f0:	e040      	b.n	8000374 <GPIO_PeriClockControl+0x170>
		}else if(pGPIOx == GPIOC){
 80002f2:	687b      	ldr	r3, [r7, #4]
 80002f4:	4a25      	ldr	r2, [pc, #148]	; (800038c <GPIO_PeriClockControl+0x188>)
 80002f6:	4293      	cmp	r3, r2
 80002f8:	d106      	bne.n	8000308 <GPIO_PeriClockControl+0x104>
			GPIOC_PCLK_DI();
 80002fa:	4b22      	ldr	r3, [pc, #136]	; (8000384 <GPIO_PeriClockControl+0x180>)
 80002fc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002fe:	4a21      	ldr	r2, [pc, #132]	; (8000384 <GPIO_PeriClockControl+0x180>)
 8000300:	f023 0304 	bic.w	r3, r3, #4
 8000304:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000306:	e035      	b.n	8000374 <GPIO_PeriClockControl+0x170>
		}else if(pGPIOx == GPIOD){
 8000308:	687b      	ldr	r3, [r7, #4]
 800030a:	4a21      	ldr	r2, [pc, #132]	; (8000390 <GPIO_PeriClockControl+0x18c>)
 800030c:	4293      	cmp	r3, r2
 800030e:	d106      	bne.n	800031e <GPIO_PeriClockControl+0x11a>
			GPIOD_PCLK_DI();
 8000310:	4b1c      	ldr	r3, [pc, #112]	; (8000384 <GPIO_PeriClockControl+0x180>)
 8000312:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000314:	4a1b      	ldr	r2, [pc, #108]	; (8000384 <GPIO_PeriClockControl+0x180>)
 8000316:	f023 0308 	bic.w	r3, r3, #8
 800031a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800031c:	e02a      	b.n	8000374 <GPIO_PeriClockControl+0x170>
		}else if(pGPIOx == GPIOE){
 800031e:	687b      	ldr	r3, [r7, #4]
 8000320:	4a1c      	ldr	r2, [pc, #112]	; (8000394 <GPIO_PeriClockControl+0x190>)
 8000322:	4293      	cmp	r3, r2
 8000324:	d106      	bne.n	8000334 <GPIO_PeriClockControl+0x130>
			GPIOE_PCLK_DI();
 8000326:	4b17      	ldr	r3, [pc, #92]	; (8000384 <GPIO_PeriClockControl+0x180>)
 8000328:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800032a:	4a16      	ldr	r2, [pc, #88]	; (8000384 <GPIO_PeriClockControl+0x180>)
 800032c:	f023 0310 	bic.w	r3, r3, #16
 8000330:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000332:	e01f      	b.n	8000374 <GPIO_PeriClockControl+0x170>
		}else if(pGPIOx == GPIOF){
 8000334:	687b      	ldr	r3, [r7, #4]
 8000336:	4a18      	ldr	r2, [pc, #96]	; (8000398 <GPIO_PeriClockControl+0x194>)
 8000338:	4293      	cmp	r3, r2
 800033a:	d106      	bne.n	800034a <GPIO_PeriClockControl+0x146>
			GPIOF_PCLK_DI();
 800033c:	4b11      	ldr	r3, [pc, #68]	; (8000384 <GPIO_PeriClockControl+0x180>)
 800033e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000340:	4a10      	ldr	r2, [pc, #64]	; (8000384 <GPIO_PeriClockControl+0x180>)
 8000342:	f023 0320 	bic.w	r3, r3, #32
 8000346:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000348:	e014      	b.n	8000374 <GPIO_PeriClockControl+0x170>
		}else if(pGPIOx == GPIOG){
 800034a:	687b      	ldr	r3, [r7, #4]
 800034c:	4a13      	ldr	r2, [pc, #76]	; (800039c <GPIO_PeriClockControl+0x198>)
 800034e:	4293      	cmp	r3, r2
 8000350:	d106      	bne.n	8000360 <GPIO_PeriClockControl+0x15c>
			GPIOG_PCLK_DI();
 8000352:	4b0c      	ldr	r3, [pc, #48]	; (8000384 <GPIO_PeriClockControl+0x180>)
 8000354:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000356:	4a0b      	ldr	r2, [pc, #44]	; (8000384 <GPIO_PeriClockControl+0x180>)
 8000358:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800035c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800035e:	e009      	b.n	8000374 <GPIO_PeriClockControl+0x170>
		}else if(pGPIOx == GPIOH){
 8000360:	687b      	ldr	r3, [r7, #4]
 8000362:	4a0f      	ldr	r2, [pc, #60]	; (80003a0 <GPIO_PeriClockControl+0x19c>)
 8000364:	4293      	cmp	r3, r2
 8000366:	d105      	bne.n	8000374 <GPIO_PeriClockControl+0x170>
			GPIOH_PCLK_DI();
 8000368:	4b06      	ldr	r3, [pc, #24]	; (8000384 <GPIO_PeriClockControl+0x180>)
 800036a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800036c:	4a05      	ldr	r2, [pc, #20]	; (8000384 <GPIO_PeriClockControl+0x180>)
 800036e:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8000372:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000374:	bf00      	nop
 8000376:	370c      	adds	r7, #12
 8000378:	46bd      	mov	sp, r7
 800037a:	bc80      	pop	{r7}
 800037c:	4770      	bx	lr
 800037e:	bf00      	nop
 8000380:	40020000 	.word	0x40020000
 8000384:	40023800 	.word	0x40023800
 8000388:	40020400 	.word	0x40020400
 800038c:	40020800 	.word	0x40020800
 8000390:	40020c00 	.word	0x40020c00
 8000394:	40021000 	.word	0x40021000
 8000398:	40021400 	.word	0x40021400
 800039c:	40021800 	.word	0x40021800
 80003a0:	40021c00 	.word	0x40021c00

080003a4 <GPIO_Init>:


/*
 * Initialize and De-Initialize
 */
void GPIO_Init(GPIO_Handle_t *pGPIOHandle){
 80003a4:	b480      	push	{r7}
 80003a6:	b085      	sub	sp, #20
 80003a8:	af00      	add	r7, sp, #0
 80003aa:	6078      	str	r0, [r7, #4]
	uint32_t temp = 0; // Temporary Register
 80003ac:	2300      	movs	r3, #0
 80003ae:	60fb      	str	r3, [r7, #12]

	// 1. Configure Mode of GPIO Pin
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG){
 80003b0:	687b      	ldr	r3, [r7, #4]
 80003b2:	795b      	ldrb	r3, [r3, #5]
 80003b4:	2b03      	cmp	r3, #3
 80003b6:	d821      	bhi.n	80003fc <GPIO_Init+0x58>
		temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80003b8:	687b      	ldr	r3, [r7, #4]
 80003ba:	795b      	ldrb	r3, [r3, #5]
 80003bc:	461a      	mov	r2, r3
 80003be:	687b      	ldr	r3, [r7, #4]
 80003c0:	791b      	ldrb	r3, [r3, #4]
 80003c2:	005b      	lsls	r3, r3, #1
 80003c4:	fa02 f303 	lsl.w	r3, r2, r3
 80003c8:	60fb      	str	r3, [r7, #12]
		pGPIOHandle->pGPIOx->MODER &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); // Clear
 80003ca:	687b      	ldr	r3, [r7, #4]
 80003cc:	681b      	ldr	r3, [r3, #0]
 80003ce:	681a      	ldr	r2, [r3, #0]
 80003d0:	687b      	ldr	r3, [r7, #4]
 80003d2:	791b      	ldrb	r3, [r3, #4]
 80003d4:	4619      	mov	r1, r3
 80003d6:	2303      	movs	r3, #3
 80003d8:	408b      	lsls	r3, r1
 80003da:	43db      	mvns	r3, r3
 80003dc:	4619      	mov	r1, r3
 80003de:	687b      	ldr	r3, [r7, #4]
 80003e0:	681b      	ldr	r3, [r3, #0]
 80003e2:	400a      	ands	r2, r1
 80003e4:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp; // Set
 80003e6:	687b      	ldr	r3, [r7, #4]
 80003e8:	681b      	ldr	r3, [r3, #0]
 80003ea:	6819      	ldr	r1, [r3, #0]
 80003ec:	687b      	ldr	r3, [r7, #4]
 80003ee:	681b      	ldr	r3, [r3, #0]
 80003f0:	68fa      	ldr	r2, [r7, #12]
 80003f2:	430a      	orrs	r2, r1
 80003f4:	601a      	str	r2, [r3, #0]
		temp = 0;
 80003f6:	2300      	movs	r3, #0
 80003f8:	60fb      	str	r3, [r7, #12]
 80003fa:	e0b8      	b.n	800056e <GPIO_Init+0x1ca>
	}else{
		// TODO: Interrupt Mode
		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FT){
 80003fc:	687b      	ldr	r3, [r7, #4]
 80003fe:	795b      	ldrb	r3, [r3, #5]
 8000400:	2b04      	cmp	r3, #4
 8000402:	d117      	bne.n	8000434 <GPIO_Init+0x90>
			// Configure the Falling Trigger Selection Register
			EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000404:	4b43      	ldr	r3, [pc, #268]	; (8000514 <GPIO_Init+0x170>)
 8000406:	68db      	ldr	r3, [r3, #12]
 8000408:	687a      	ldr	r2, [r7, #4]
 800040a:	7912      	ldrb	r2, [r2, #4]
 800040c:	4611      	mov	r1, r2
 800040e:	2201      	movs	r2, #1
 8000410:	408a      	lsls	r2, r1
 8000412:	4611      	mov	r1, r2
 8000414:	4a3f      	ldr	r2, [pc, #252]	; (8000514 <GPIO_Init+0x170>)
 8000416:	430b      	orrs	r3, r1
 8000418:	60d3      	str	r3, [r2, #12]
			EXTI->RTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); // Clear RTSR
 800041a:	4b3e      	ldr	r3, [pc, #248]	; (8000514 <GPIO_Init+0x170>)
 800041c:	689b      	ldr	r3, [r3, #8]
 800041e:	687a      	ldr	r2, [r7, #4]
 8000420:	7912      	ldrb	r2, [r2, #4]
 8000422:	4611      	mov	r1, r2
 8000424:	2201      	movs	r2, #1
 8000426:	408a      	lsls	r2, r1
 8000428:	43d2      	mvns	r2, r2
 800042a:	4611      	mov	r1, r2
 800042c:	4a39      	ldr	r2, [pc, #228]	; (8000514 <GPIO_Init+0x170>)
 800042e:	400b      	ands	r3, r1
 8000430:	6093      	str	r3, [r2, #8]
 8000432:	e035      	b.n	80004a0 <GPIO_Init+0xfc>

		}else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RT){
 8000434:	687b      	ldr	r3, [r7, #4]
 8000436:	795b      	ldrb	r3, [r3, #5]
 8000438:	2b05      	cmp	r3, #5
 800043a:	d117      	bne.n	800046c <GPIO_Init+0xc8>
			// Configure the Rising Trigger Selection Register
			EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800043c:	4b35      	ldr	r3, [pc, #212]	; (8000514 <GPIO_Init+0x170>)
 800043e:	689b      	ldr	r3, [r3, #8]
 8000440:	687a      	ldr	r2, [r7, #4]
 8000442:	7912      	ldrb	r2, [r2, #4]
 8000444:	4611      	mov	r1, r2
 8000446:	2201      	movs	r2, #1
 8000448:	408a      	lsls	r2, r1
 800044a:	4611      	mov	r1, r2
 800044c:	4a31      	ldr	r2, [pc, #196]	; (8000514 <GPIO_Init+0x170>)
 800044e:	430b      	orrs	r3, r1
 8000450:	6093      	str	r3, [r2, #8]
			EXTI->FTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); // Clear FTSR
 8000452:	4b30      	ldr	r3, [pc, #192]	; (8000514 <GPIO_Init+0x170>)
 8000454:	68db      	ldr	r3, [r3, #12]
 8000456:	687a      	ldr	r2, [r7, #4]
 8000458:	7912      	ldrb	r2, [r2, #4]
 800045a:	4611      	mov	r1, r2
 800045c:	2201      	movs	r2, #1
 800045e:	408a      	lsls	r2, r1
 8000460:	43d2      	mvns	r2, r2
 8000462:	4611      	mov	r1, r2
 8000464:	4a2b      	ldr	r2, [pc, #172]	; (8000514 <GPIO_Init+0x170>)
 8000466:	400b      	ands	r3, r1
 8000468:	60d3      	str	r3, [r2, #12]
 800046a:	e019      	b.n	80004a0 <GPIO_Init+0xfc>

		}else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RFT){
 800046c:	687b      	ldr	r3, [r7, #4]
 800046e:	795b      	ldrb	r3, [r3, #5]
 8000470:	2b06      	cmp	r3, #6
 8000472:	d115      	bne.n	80004a0 <GPIO_Init+0xfc>
			// Configure Both Falling and Rising
			EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000474:	4b27      	ldr	r3, [pc, #156]	; (8000514 <GPIO_Init+0x170>)
 8000476:	68db      	ldr	r3, [r3, #12]
 8000478:	687a      	ldr	r2, [r7, #4]
 800047a:	7912      	ldrb	r2, [r2, #4]
 800047c:	4611      	mov	r1, r2
 800047e:	2201      	movs	r2, #1
 8000480:	408a      	lsls	r2, r1
 8000482:	4611      	mov	r1, r2
 8000484:	4a23      	ldr	r2, [pc, #140]	; (8000514 <GPIO_Init+0x170>)
 8000486:	430b      	orrs	r3, r1
 8000488:	60d3      	str	r3, [r2, #12]
			EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800048a:	4b22      	ldr	r3, [pc, #136]	; (8000514 <GPIO_Init+0x170>)
 800048c:	689b      	ldr	r3, [r3, #8]
 800048e:	687a      	ldr	r2, [r7, #4]
 8000490:	7912      	ldrb	r2, [r2, #4]
 8000492:	4611      	mov	r1, r2
 8000494:	2201      	movs	r2, #1
 8000496:	408a      	lsls	r2, r1
 8000498:	4611      	mov	r1, r2
 800049a:	4a1e      	ldr	r2, [pc, #120]	; (8000514 <GPIO_Init+0x170>)
 800049c:	430b      	orrs	r3, r1
 800049e:	6093      	str	r3, [r2, #8]
		}

		// Configure the GPIO port Selection in SYSCFG_EXTICR
		uint8_t ExtiCR_Number = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 4;
 80004a0:	687b      	ldr	r3, [r7, #4]
 80004a2:	791b      	ldrb	r3, [r3, #4]
 80004a4:	089b      	lsrs	r3, r3, #2
 80004a6:	72fb      	strb	r3, [r7, #11]
		uint8_t ExtiCR_ShiftOffset = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 4;
 80004a8:	687b      	ldr	r3, [r7, #4]
 80004aa:	791b      	ldrb	r3, [r3, #4]
 80004ac:	f003 0303 	and.w	r3, r3, #3
 80004b0:	72bb      	strb	r3, [r7, #10]
		uint8_t portcode = GPIO_BASEADDR_TO_PORTCODE(pGPIOHandle->pGPIOx);
 80004b2:	687b      	ldr	r3, [r7, #4]
 80004b4:	681b      	ldr	r3, [r3, #0]
 80004b6:	4a18      	ldr	r2, [pc, #96]	; (8000518 <GPIO_Init+0x174>)
 80004b8:	4293      	cmp	r3, r2
 80004ba:	d03b      	beq.n	8000534 <GPIO_Init+0x190>
 80004bc:	687b      	ldr	r3, [r7, #4]
 80004be:	681b      	ldr	r3, [r3, #0]
 80004c0:	4a16      	ldr	r2, [pc, #88]	; (800051c <GPIO_Init+0x178>)
 80004c2:	4293      	cmp	r3, r2
 80004c4:	d024      	beq.n	8000510 <GPIO_Init+0x16c>
 80004c6:	687b      	ldr	r3, [r7, #4]
 80004c8:	681b      	ldr	r3, [r3, #0]
 80004ca:	4a15      	ldr	r2, [pc, #84]	; (8000520 <GPIO_Init+0x17c>)
 80004cc:	4293      	cmp	r3, r2
 80004ce:	d01d      	beq.n	800050c <GPIO_Init+0x168>
 80004d0:	687b      	ldr	r3, [r7, #4]
 80004d2:	681b      	ldr	r3, [r3, #0]
 80004d4:	4a13      	ldr	r2, [pc, #76]	; (8000524 <GPIO_Init+0x180>)
 80004d6:	4293      	cmp	r3, r2
 80004d8:	d016      	beq.n	8000508 <GPIO_Init+0x164>
 80004da:	687b      	ldr	r3, [r7, #4]
 80004dc:	681b      	ldr	r3, [r3, #0]
 80004de:	4a12      	ldr	r2, [pc, #72]	; (8000528 <GPIO_Init+0x184>)
 80004e0:	4293      	cmp	r3, r2
 80004e2:	d00f      	beq.n	8000504 <GPIO_Init+0x160>
 80004e4:	687b      	ldr	r3, [r7, #4]
 80004e6:	681b      	ldr	r3, [r3, #0]
 80004e8:	4a10      	ldr	r2, [pc, #64]	; (800052c <GPIO_Init+0x188>)
 80004ea:	4293      	cmp	r3, r2
 80004ec:	d008      	beq.n	8000500 <GPIO_Init+0x15c>
 80004ee:	687b      	ldr	r3, [r7, #4]
 80004f0:	681b      	ldr	r3, [r3, #0]
 80004f2:	4a0f      	ldr	r2, [pc, #60]	; (8000530 <GPIO_Init+0x18c>)
 80004f4:	4293      	cmp	r3, r2
 80004f6:	d101      	bne.n	80004fc <GPIO_Init+0x158>
 80004f8:	2306      	movs	r3, #6
 80004fa:	e01c      	b.n	8000536 <GPIO_Init+0x192>
 80004fc:	2300      	movs	r3, #0
 80004fe:	e01a      	b.n	8000536 <GPIO_Init+0x192>
 8000500:	2305      	movs	r3, #5
 8000502:	e018      	b.n	8000536 <GPIO_Init+0x192>
 8000504:	2304      	movs	r3, #4
 8000506:	e016      	b.n	8000536 <GPIO_Init+0x192>
 8000508:	2303      	movs	r3, #3
 800050a:	e014      	b.n	8000536 <GPIO_Init+0x192>
 800050c:	2302      	movs	r3, #2
 800050e:	e012      	b.n	8000536 <GPIO_Init+0x192>
 8000510:	2301      	movs	r3, #1
 8000512:	e010      	b.n	8000536 <GPIO_Init+0x192>
 8000514:	40013c00 	.word	0x40013c00
 8000518:	40020000 	.word	0x40020000
 800051c:	40020400 	.word	0x40020400
 8000520:	40020800 	.word	0x40020800
 8000524:	40020c00 	.word	0x40020c00
 8000528:	40021000 	.word	0x40021000
 800052c:	40021400 	.word	0x40021400
 8000530:	40021800 	.word	0x40021800
 8000534:	2300      	movs	r3, #0
 8000536:	727b      	strb	r3, [r7, #9]
		SYSCFG_PCLK_EN();
 8000538:	4b6b      	ldr	r3, [pc, #428]	; (80006e8 <GPIO_Init+0x344>)
 800053a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800053c:	4a6a      	ldr	r2, [pc, #424]	; (80006e8 <GPIO_Init+0x344>)
 800053e:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000542:	6453      	str	r3, [r2, #68]	; 0x44
		SYSCFG->EXTICR[ExtiCR_Number] = portcode << (ExtiCR_ShiftOffset * 4);
 8000544:	7a7a      	ldrb	r2, [r7, #9]
 8000546:	7abb      	ldrb	r3, [r7, #10]
 8000548:	009b      	lsls	r3, r3, #2
 800054a:	fa02 f103 	lsl.w	r1, r2, r3
 800054e:	4a67      	ldr	r2, [pc, #412]	; (80006ec <GPIO_Init+0x348>)
 8000550:	7afb      	ldrb	r3, [r7, #11]
 8000552:	3302      	adds	r3, #2
 8000554:	f842 1023 	str.w	r1, [r2, r3, lsl #2]

		// Enable the EXTI interrupt delivery using IMR
		EXTI->IMR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000558:	4b65      	ldr	r3, [pc, #404]	; (80006f0 <GPIO_Init+0x34c>)
 800055a:	681b      	ldr	r3, [r3, #0]
 800055c:	687a      	ldr	r2, [r7, #4]
 800055e:	7912      	ldrb	r2, [r2, #4]
 8000560:	4611      	mov	r1, r2
 8000562:	2201      	movs	r2, #1
 8000564:	408a      	lsls	r2, r1
 8000566:	4611      	mov	r1, r2
 8000568:	4a61      	ldr	r2, [pc, #388]	; (80006f0 <GPIO_Init+0x34c>)
 800056a:	430b      	orrs	r3, r1
 800056c:	6013      	str	r3, [r2, #0]
	}

	// 2. Configure Speed
	temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800056e:	687b      	ldr	r3, [r7, #4]
 8000570:	799b      	ldrb	r3, [r3, #6]
 8000572:	461a      	mov	r2, r3
 8000574:	687b      	ldr	r3, [r7, #4]
 8000576:	791b      	ldrb	r3, [r3, #4]
 8000578:	005b      	lsls	r3, r3, #1
 800057a:	fa02 f303 	lsl.w	r3, r2, r3
 800057e:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->OSPEEDR &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); // Clear
 8000580:	687b      	ldr	r3, [r7, #4]
 8000582:	681b      	ldr	r3, [r3, #0]
 8000584:	689a      	ldr	r2, [r3, #8]
 8000586:	687b      	ldr	r3, [r7, #4]
 8000588:	791b      	ldrb	r3, [r3, #4]
 800058a:	4619      	mov	r1, r3
 800058c:	2303      	movs	r3, #3
 800058e:	408b      	lsls	r3, r1
 8000590:	43db      	mvns	r3, r3
 8000592:	4619      	mov	r1, r3
 8000594:	687b      	ldr	r3, [r7, #4]
 8000596:	681b      	ldr	r3, [r3, #0]
 8000598:	400a      	ands	r2, r1
 800059a:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 800059c:	687b      	ldr	r3, [r7, #4]
 800059e:	681b      	ldr	r3, [r3, #0]
 80005a0:	6899      	ldr	r1, [r3, #8]
 80005a2:	687b      	ldr	r3, [r7, #4]
 80005a4:	681b      	ldr	r3, [r3, #0]
 80005a6:	68fa      	ldr	r2, [r7, #12]
 80005a8:	430a      	orrs	r2, r1
 80005aa:	609a      	str	r2, [r3, #8]
	temp = 0;
 80005ac:	2300      	movs	r3, #0
 80005ae:	60fb      	str	r3, [r7, #12]

	// 3. Configure Pull-up Pull-down Settings
	temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80005b0:	687b      	ldr	r3, [r7, #4]
 80005b2:	79db      	ldrb	r3, [r3, #7]
 80005b4:	461a      	mov	r2, r3
 80005b6:	687b      	ldr	r3, [r7, #4]
 80005b8:	791b      	ldrb	r3, [r3, #4]
 80005ba:	005b      	lsls	r3, r3, #1
 80005bc:	fa02 f303 	lsl.w	r3, r2, r3
 80005c0:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->PUPDR &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); // Clear
 80005c2:	687b      	ldr	r3, [r7, #4]
 80005c4:	681b      	ldr	r3, [r3, #0]
 80005c6:	68da      	ldr	r2, [r3, #12]
 80005c8:	687b      	ldr	r3, [r7, #4]
 80005ca:	791b      	ldrb	r3, [r3, #4]
 80005cc:	4619      	mov	r1, r3
 80005ce:	2303      	movs	r3, #3
 80005d0:	408b      	lsls	r3, r1
 80005d2:	43db      	mvns	r3, r3
 80005d4:	4619      	mov	r1, r3
 80005d6:	687b      	ldr	r3, [r7, #4]
 80005d8:	681b      	ldr	r3, [r3, #0]
 80005da:	400a      	ands	r2, r1
 80005dc:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 80005de:	687b      	ldr	r3, [r7, #4]
 80005e0:	681b      	ldr	r3, [r3, #0]
 80005e2:	68d9      	ldr	r1, [r3, #12]
 80005e4:	687b      	ldr	r3, [r7, #4]
 80005e6:	681b      	ldr	r3, [r3, #0]
 80005e8:	68fa      	ldr	r2, [r7, #12]
 80005ea:	430a      	orrs	r2, r1
 80005ec:	60da      	str	r2, [r3, #12]
	temp = 0;
 80005ee:	2300      	movs	r3, #0
 80005f0:	60fb      	str	r3, [r7, #12]

	// 4. Configure the Output Type
	temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber;
 80005f2:	687b      	ldr	r3, [r7, #4]
 80005f4:	7a1b      	ldrb	r3, [r3, #8]
 80005f6:	461a      	mov	r2, r3
 80005f8:	687b      	ldr	r3, [r7, #4]
 80005fa:	791b      	ldrb	r3, [r3, #4]
 80005fc:	fa02 f303 	lsl.w	r3, r2, r3
 8000600:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->OTYPER &= ~(0x1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); // Clear
 8000602:	687b      	ldr	r3, [r7, #4]
 8000604:	681b      	ldr	r3, [r3, #0]
 8000606:	685a      	ldr	r2, [r3, #4]
 8000608:	687b      	ldr	r3, [r7, #4]
 800060a:	791b      	ldrb	r3, [r3, #4]
 800060c:	4619      	mov	r1, r3
 800060e:	2301      	movs	r3, #1
 8000610:	408b      	lsls	r3, r1
 8000612:	43db      	mvns	r3, r3
 8000614:	4619      	mov	r1, r3
 8000616:	687b      	ldr	r3, [r7, #4]
 8000618:	681b      	ldr	r3, [r3, #0]
 800061a:	400a      	ands	r2, r1
 800061c:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 800061e:	687b      	ldr	r3, [r7, #4]
 8000620:	681b      	ldr	r3, [r3, #0]
 8000622:	6859      	ldr	r1, [r3, #4]
 8000624:	687b      	ldr	r3, [r7, #4]
 8000626:	681b      	ldr	r3, [r3, #0]
 8000628:	68fa      	ldr	r2, [r7, #12]
 800062a:	430a      	orrs	r2, r1
 800062c:	605a      	str	r2, [r3, #4]
	temp = 0;
 800062e:	2300      	movs	r3, #0
 8000630:	60fb      	str	r3, [r7, #12]

	// 5. Configure Alternate Functionality
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFUN){
 8000632:	687b      	ldr	r3, [r7, #4]
 8000634:	795b      	ldrb	r3, [r3, #5]
 8000636:	2b02      	cmp	r3, #2
 8000638:	d150      	bne.n	80006dc <GPIO_Init+0x338>
		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber <= GPIO_PIN_NO_7){
 800063a:	687b      	ldr	r3, [r7, #4]
 800063c:	791b      	ldrb	r3, [r3, #4]
 800063e:	2b07      	cmp	r3, #7
 8000640:	d826      	bhi.n	8000690 <GPIO_Init+0x2ec>
				// AFRL Registers
				temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4 * (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 8));
 8000642:	687b      	ldr	r3, [r7, #4]
 8000644:	7a5b      	ldrb	r3, [r3, #9]
 8000646:	461a      	mov	r2, r3
 8000648:	687b      	ldr	r3, [r7, #4]
 800064a:	791b      	ldrb	r3, [r3, #4]
 800064c:	f003 0307 	and.w	r3, r3, #7
 8000650:	009b      	lsls	r3, r3, #2
 8000652:	fa02 f303 	lsl.w	r3, r2, r3
 8000656:	60fb      	str	r3, [r7, #12]
				pGPIOHandle->pGPIOx->AFRL &= ~(0xF << (4 * (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 8))); // Clear
 8000658:	687b      	ldr	r3, [r7, #4]
 800065a:	681b      	ldr	r3, [r3, #0]
 800065c:	6a1a      	ldr	r2, [r3, #32]
 800065e:	687b      	ldr	r3, [r7, #4]
 8000660:	791b      	ldrb	r3, [r3, #4]
 8000662:	f003 0307 	and.w	r3, r3, #7
 8000666:	009b      	lsls	r3, r3, #2
 8000668:	210f      	movs	r1, #15
 800066a:	fa01 f303 	lsl.w	r3, r1, r3
 800066e:	43db      	mvns	r3, r3
 8000670:	4619      	mov	r1, r3
 8000672:	687b      	ldr	r3, [r7, #4]
 8000674:	681b      	ldr	r3, [r3, #0]
 8000676:	400a      	ands	r2, r1
 8000678:	621a      	str	r2, [r3, #32]
				pGPIOHandle->pGPIOx->AFRL |= temp;
 800067a:	687b      	ldr	r3, [r7, #4]
 800067c:	681b      	ldr	r3, [r3, #0]
 800067e:	6a19      	ldr	r1, [r3, #32]
 8000680:	687b      	ldr	r3, [r7, #4]
 8000682:	681b      	ldr	r3, [r3, #0]
 8000684:	68fa      	ldr	r2, [r7, #12]
 8000686:	430a      	orrs	r2, r1
 8000688:	621a      	str	r2, [r3, #32]
				temp = 0;
 800068a:	2300      	movs	r3, #0
 800068c:	60fb      	str	r3, [r7, #12]
				pGPIOHandle->pGPIOx->AFRH |= temp;
				temp = 0;
			}
	}

}
 800068e:	e025      	b.n	80006dc <GPIO_Init+0x338>
				temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4 * (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 8));
 8000690:	687b      	ldr	r3, [r7, #4]
 8000692:	7a5b      	ldrb	r3, [r3, #9]
 8000694:	461a      	mov	r2, r3
 8000696:	687b      	ldr	r3, [r7, #4]
 8000698:	791b      	ldrb	r3, [r3, #4]
 800069a:	f003 0307 	and.w	r3, r3, #7
 800069e:	009b      	lsls	r3, r3, #2
 80006a0:	fa02 f303 	lsl.w	r3, r2, r3
 80006a4:	60fb      	str	r3, [r7, #12]
				pGPIOHandle->pGPIOx->AFRH &= ~(0xF << (4 * (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 8))); // Clear
 80006a6:	687b      	ldr	r3, [r7, #4]
 80006a8:	681b      	ldr	r3, [r3, #0]
 80006aa:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80006ac:	687b      	ldr	r3, [r7, #4]
 80006ae:	791b      	ldrb	r3, [r3, #4]
 80006b0:	f003 0307 	and.w	r3, r3, #7
 80006b4:	009b      	lsls	r3, r3, #2
 80006b6:	210f      	movs	r1, #15
 80006b8:	fa01 f303 	lsl.w	r3, r1, r3
 80006bc:	43db      	mvns	r3, r3
 80006be:	4619      	mov	r1, r3
 80006c0:	687b      	ldr	r3, [r7, #4]
 80006c2:	681b      	ldr	r3, [r3, #0]
 80006c4:	400a      	ands	r2, r1
 80006c6:	625a      	str	r2, [r3, #36]	; 0x24
				pGPIOHandle->pGPIOx->AFRH |= temp;
 80006c8:	687b      	ldr	r3, [r7, #4]
 80006ca:	681b      	ldr	r3, [r3, #0]
 80006cc:	6a59      	ldr	r1, [r3, #36]	; 0x24
 80006ce:	687b      	ldr	r3, [r7, #4]
 80006d0:	681b      	ldr	r3, [r3, #0]
 80006d2:	68fa      	ldr	r2, [r7, #12]
 80006d4:	430a      	orrs	r2, r1
 80006d6:	625a      	str	r2, [r3, #36]	; 0x24
				temp = 0;
 80006d8:	2300      	movs	r3, #0
 80006da:	60fb      	str	r3, [r7, #12]
}
 80006dc:	bf00      	nop
 80006de:	3714      	adds	r7, #20
 80006e0:	46bd      	mov	sp, r7
 80006e2:	bc80      	pop	{r7}
 80006e4:	4770      	bx	lr
 80006e6:	bf00      	nop
 80006e8:	40023800 	.word	0x40023800
 80006ec:	40013800 	.word	0x40013800
 80006f0:	40013c00 	.word	0x40013c00

080006f4 <GPIO_ToggleOutputPin>:

void GPIO_WriteToOutputPort(GPIO_RegDef_t *pGPIOx, uint16_t Value){
	pGPIOx->ODR = Value;
}

void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber){
 80006f4:	b480      	push	{r7}
 80006f6:	b083      	sub	sp, #12
 80006f8:	af00      	add	r7, sp, #0
 80006fa:	6078      	str	r0, [r7, #4]
 80006fc:	460b      	mov	r3, r1
 80006fe:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR ^= (1 << PinNumber);
 8000700:	687b      	ldr	r3, [r7, #4]
 8000702:	695b      	ldr	r3, [r3, #20]
 8000704:	78fa      	ldrb	r2, [r7, #3]
 8000706:	2101      	movs	r1, #1
 8000708:	fa01 f202 	lsl.w	r2, r1, r2
 800070c:	405a      	eors	r2, r3
 800070e:	687b      	ldr	r3, [r7, #4]
 8000710:	615a      	str	r2, [r3, #20]
}
 8000712:	bf00      	nop
 8000714:	370c      	adds	r7, #12
 8000716:	46bd      	mov	sp, r7
 8000718:	bc80      	pop	{r7}
 800071a:	4770      	bx	lr

0800071c <GPIO_IRQInterruptConfig>:


/*
 * IRQ Interrupt Configuration
 */
void GPIO_IRQInterruptConfig(uint8_t IRQNumber, uint8_t EnOrDi){
 800071c:	b480      	push	{r7}
 800071e:	b083      	sub	sp, #12
 8000720:	af00      	add	r7, sp, #0
 8000722:	4603      	mov	r3, r0
 8000724:	460a      	mov	r2, r1
 8000726:	71fb      	strb	r3, [r7, #7]
 8000728:	4613      	mov	r3, r2
 800072a:	71bb      	strb	r3, [r7, #6]
	if(EnOrDi == ENABLE){
 800072c:	79bb      	ldrb	r3, [r7, #6]
 800072e:	2b01      	cmp	r3, #1
 8000730:	d133      	bne.n	800079a <GPIO_IRQInterruptConfig+0x7e>
		// Enable
		if(IRQNumber <= 31){
 8000732:	79fb      	ldrb	r3, [r7, #7]
 8000734:	2b1f      	cmp	r3, #31
 8000736:	d80a      	bhi.n	800074e <GPIO_IRQInterruptConfig+0x32>
			// Program ISER0 Register
			*NVIC_ISER0 |= (1 << IRQNumber);
 8000738:	4b34      	ldr	r3, [pc, #208]	; (800080c <GPIO_IRQInterruptConfig+0xf0>)
 800073a:	681b      	ldr	r3, [r3, #0]
 800073c:	79fa      	ldrb	r2, [r7, #7]
 800073e:	2101      	movs	r1, #1
 8000740:	fa01 f202 	lsl.w	r2, r1, r2
 8000744:	4611      	mov	r1, r2
 8000746:	4a31      	ldr	r2, [pc, #196]	; (800080c <GPIO_IRQInterruptConfig+0xf0>)
 8000748:	430b      	orrs	r3, r1
 800074a:	6013      	str	r3, [r2, #0]
			// Program ICER2 Register
			*NVIC_ICER2 |= (1 << (IRQNumber % 32));
		}
	}

}
 800074c:	e059      	b.n	8000802 <GPIO_IRQInterruptConfig+0xe6>
		}else if(IRQNumber > 31 && IRQNumber < 64){
 800074e:	79fb      	ldrb	r3, [r7, #7]
 8000750:	2b1f      	cmp	r3, #31
 8000752:	d90f      	bls.n	8000774 <GPIO_IRQInterruptConfig+0x58>
 8000754:	79fb      	ldrb	r3, [r7, #7]
 8000756:	2b3f      	cmp	r3, #63	; 0x3f
 8000758:	d80c      	bhi.n	8000774 <GPIO_IRQInterruptConfig+0x58>
			*NVIC_ISER1 |= (1 << (IRQNumber % 32));
 800075a:	4b2d      	ldr	r3, [pc, #180]	; (8000810 <GPIO_IRQInterruptConfig+0xf4>)
 800075c:	681b      	ldr	r3, [r3, #0]
 800075e:	79fa      	ldrb	r2, [r7, #7]
 8000760:	f002 021f 	and.w	r2, r2, #31
 8000764:	2101      	movs	r1, #1
 8000766:	fa01 f202 	lsl.w	r2, r1, r2
 800076a:	4611      	mov	r1, r2
 800076c:	4a28      	ldr	r2, [pc, #160]	; (8000810 <GPIO_IRQInterruptConfig+0xf4>)
 800076e:	430b      	orrs	r3, r1
 8000770:	6013      	str	r3, [r2, #0]
 8000772:	e046      	b.n	8000802 <GPIO_IRQInterruptConfig+0xe6>
		}else if(IRQNumber >= 64 && IRQNumber < 96){
 8000774:	79fb      	ldrb	r3, [r7, #7]
 8000776:	2b3f      	cmp	r3, #63	; 0x3f
 8000778:	d943      	bls.n	8000802 <GPIO_IRQInterruptConfig+0xe6>
 800077a:	79fb      	ldrb	r3, [r7, #7]
 800077c:	2b5f      	cmp	r3, #95	; 0x5f
 800077e:	d840      	bhi.n	8000802 <GPIO_IRQInterruptConfig+0xe6>
			*NVIC_ISER2 |= (1 << (IRQNumber % 32));
 8000780:	4b24      	ldr	r3, [pc, #144]	; (8000814 <GPIO_IRQInterruptConfig+0xf8>)
 8000782:	681b      	ldr	r3, [r3, #0]
 8000784:	79fa      	ldrb	r2, [r7, #7]
 8000786:	f002 021f 	and.w	r2, r2, #31
 800078a:	2101      	movs	r1, #1
 800078c:	fa01 f202 	lsl.w	r2, r1, r2
 8000790:	4611      	mov	r1, r2
 8000792:	4a20      	ldr	r2, [pc, #128]	; (8000814 <GPIO_IRQInterruptConfig+0xf8>)
 8000794:	430b      	orrs	r3, r1
 8000796:	6013      	str	r3, [r2, #0]
}
 8000798:	e033      	b.n	8000802 <GPIO_IRQInterruptConfig+0xe6>
		if(IRQNumber <= 31){
 800079a:	79fb      	ldrb	r3, [r7, #7]
 800079c:	2b1f      	cmp	r3, #31
 800079e:	d80a      	bhi.n	80007b6 <GPIO_IRQInterruptConfig+0x9a>
			*NVIC_ICER0 |= (1 << IRQNumber);
 80007a0:	4b1d      	ldr	r3, [pc, #116]	; (8000818 <GPIO_IRQInterruptConfig+0xfc>)
 80007a2:	681b      	ldr	r3, [r3, #0]
 80007a4:	79fa      	ldrb	r2, [r7, #7]
 80007a6:	2101      	movs	r1, #1
 80007a8:	fa01 f202 	lsl.w	r2, r1, r2
 80007ac:	4611      	mov	r1, r2
 80007ae:	4a1a      	ldr	r2, [pc, #104]	; (8000818 <GPIO_IRQInterruptConfig+0xfc>)
 80007b0:	430b      	orrs	r3, r1
 80007b2:	6013      	str	r3, [r2, #0]
}
 80007b4:	e025      	b.n	8000802 <GPIO_IRQInterruptConfig+0xe6>
		}else if(IRQNumber > 31 && IRQNumber < 64){
 80007b6:	79fb      	ldrb	r3, [r7, #7]
 80007b8:	2b1f      	cmp	r3, #31
 80007ba:	d90f      	bls.n	80007dc <GPIO_IRQInterruptConfig+0xc0>
 80007bc:	79fb      	ldrb	r3, [r7, #7]
 80007be:	2b3f      	cmp	r3, #63	; 0x3f
 80007c0:	d80c      	bhi.n	80007dc <GPIO_IRQInterruptConfig+0xc0>
			*NVIC_ICER1 |= (1 << (IRQNumber % 32));
 80007c2:	4b16      	ldr	r3, [pc, #88]	; (800081c <GPIO_IRQInterruptConfig+0x100>)
 80007c4:	681b      	ldr	r3, [r3, #0]
 80007c6:	79fa      	ldrb	r2, [r7, #7]
 80007c8:	f002 021f 	and.w	r2, r2, #31
 80007cc:	2101      	movs	r1, #1
 80007ce:	fa01 f202 	lsl.w	r2, r1, r2
 80007d2:	4611      	mov	r1, r2
 80007d4:	4a11      	ldr	r2, [pc, #68]	; (800081c <GPIO_IRQInterruptConfig+0x100>)
 80007d6:	430b      	orrs	r3, r1
 80007d8:	6013      	str	r3, [r2, #0]
 80007da:	e012      	b.n	8000802 <GPIO_IRQInterruptConfig+0xe6>
		}else if(IRQNumber >= 64 && IRQNumber < 96){
 80007dc:	79fb      	ldrb	r3, [r7, #7]
 80007de:	2b3f      	cmp	r3, #63	; 0x3f
 80007e0:	d90f      	bls.n	8000802 <GPIO_IRQInterruptConfig+0xe6>
 80007e2:	79fb      	ldrb	r3, [r7, #7]
 80007e4:	2b5f      	cmp	r3, #95	; 0x5f
 80007e6:	d80c      	bhi.n	8000802 <GPIO_IRQInterruptConfig+0xe6>
			*NVIC_ICER2 |= (1 << (IRQNumber % 32));
 80007e8:	4b0d      	ldr	r3, [pc, #52]	; (8000820 <GPIO_IRQInterruptConfig+0x104>)
 80007ea:	681b      	ldr	r3, [r3, #0]
 80007ec:	79fa      	ldrb	r2, [r7, #7]
 80007ee:	f002 021f 	and.w	r2, r2, #31
 80007f2:	2101      	movs	r1, #1
 80007f4:	fa01 f202 	lsl.w	r2, r1, r2
 80007f8:	4611      	mov	r1, r2
 80007fa:	4a09      	ldr	r2, [pc, #36]	; (8000820 <GPIO_IRQInterruptConfig+0x104>)
 80007fc:	430b      	orrs	r3, r1
 80007fe:	6013      	str	r3, [r2, #0]
}
 8000800:	e7ff      	b.n	8000802 <GPIO_IRQInterruptConfig+0xe6>
 8000802:	bf00      	nop
 8000804:	370c      	adds	r7, #12
 8000806:	46bd      	mov	sp, r7
 8000808:	bc80      	pop	{r7}
 800080a:	4770      	bx	lr
 800080c:	e000e100 	.word	0xe000e100
 8000810:	e000e104 	.word	0xe000e104
 8000814:	e000e108 	.word	0xe000e108
 8000818:	e000e180 	.word	0xe000e180
 800081c:	e000e184 	.word	0xe000e184
 8000820:	e000e188 	.word	0xe000e188

08000824 <GPIO_IRQPriorityConfig>:


/*
 * IRQ Priority Configuration
 */
void GPIO_IRQPriorityConfig(uint8_t IRQNumber, uint32_t IRQPriority){
 8000824:	b480      	push	{r7}
 8000826:	b085      	sub	sp, #20
 8000828:	af00      	add	r7, sp, #0
 800082a:	4603      	mov	r3, r0
 800082c:	6039      	str	r1, [r7, #0]
 800082e:	71fb      	strb	r3, [r7, #7]
	uint8_t iprx = IRQNumber / 4;
 8000830:	79fb      	ldrb	r3, [r7, #7]
 8000832:	089b      	lsrs	r3, r3, #2
 8000834:	73fb      	strb	r3, [r7, #15]
	uint8_t iprx_section = IRQNumber % 4;
 8000836:	79fb      	ldrb	r3, [r7, #7]
 8000838:	f003 0303 	and.w	r3, r3, #3
 800083c:	73bb      	strb	r3, [r7, #14]
	uint8_t shift_amount = (8 * iprx_section) + (8 - NUM_PR_BITS_IMPLEMENTED);
 800083e:	7bbb      	ldrb	r3, [r7, #14]
 8000840:	00db      	lsls	r3, r3, #3
 8000842:	b2db      	uxtb	r3, r3
 8000844:	3304      	adds	r3, #4
 8000846:	737b      	strb	r3, [r7, #13]
	*(NVIC_IPR_BASE_ADDR + iprx) |= (IRQPriority << shift_amount);
 8000848:	7bfb      	ldrb	r3, [r7, #15]
 800084a:	009b      	lsls	r3, r3, #2
 800084c:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 8000850:	f503 4364 	add.w	r3, r3, #58368	; 0xe400
 8000854:	6819      	ldr	r1, [r3, #0]
 8000856:	7b7b      	ldrb	r3, [r7, #13]
 8000858:	683a      	ldr	r2, [r7, #0]
 800085a:	409a      	lsls	r2, r3
 800085c:	7bfb      	ldrb	r3, [r7, #15]
 800085e:	009b      	lsls	r3, r3, #2
 8000860:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 8000864:	f503 4364 	add.w	r3, r3, #58368	; 0xe400
 8000868:	430a      	orrs	r2, r1
 800086a:	601a      	str	r2, [r3, #0]
}
 800086c:	bf00      	nop
 800086e:	3714      	adds	r7, #20
 8000870:	46bd      	mov	sp, r7
 8000872:	bc80      	pop	{r7}
 8000874:	4770      	bx	lr
	...

08000878 <GPIO_IRQHandling>:


/*
 * ISR Handling
 */
void GPIO_IRQHandling(uint8_t PinNumber){
 8000878:	b480      	push	{r7}
 800087a:	b083      	sub	sp, #12
 800087c:	af00      	add	r7, sp, #0
 800087e:	4603      	mov	r3, r0
 8000880:	71fb      	strb	r3, [r7, #7]
	// Clear the EXTI Priority Register corresponding to the pin number
	if(EXTI->PR & (1 << PinNumber)){
 8000882:	4b0c      	ldr	r3, [pc, #48]	; (80008b4 <GPIO_IRQHandling+0x3c>)
 8000884:	695b      	ldr	r3, [r3, #20]
 8000886:	79fa      	ldrb	r2, [r7, #7]
 8000888:	2101      	movs	r1, #1
 800088a:	fa01 f202 	lsl.w	r2, r1, r2
 800088e:	4013      	ands	r3, r2
 8000890:	2b00      	cmp	r3, #0
 8000892:	d009      	beq.n	80008a8 <GPIO_IRQHandling+0x30>
		EXTI->PR |= (1 << PinNumber);
 8000894:	4b07      	ldr	r3, [pc, #28]	; (80008b4 <GPIO_IRQHandling+0x3c>)
 8000896:	695b      	ldr	r3, [r3, #20]
 8000898:	79fa      	ldrb	r2, [r7, #7]
 800089a:	2101      	movs	r1, #1
 800089c:	fa01 f202 	lsl.w	r2, r1, r2
 80008a0:	4611      	mov	r1, r2
 80008a2:	4a04      	ldr	r2, [pc, #16]	; (80008b4 <GPIO_IRQHandling+0x3c>)
 80008a4:	430b      	orrs	r3, r1
 80008a6:	6153      	str	r3, [r2, #20]
	}

}
 80008a8:	bf00      	nop
 80008aa:	370c      	adds	r7, #12
 80008ac:	46bd      	mov	sp, r7
 80008ae:	bc80      	pop	{r7}
 80008b0:	4770      	bx	lr
 80008b2:	bf00      	nop
 80008b4:	40013c00 	.word	0x40013c00

080008b8 <delay>:
#include <string.h>
#include "stm32f446xx.h"


// Delay for the Button De-bounce
void delay(void){
 80008b8:	b480      	push	{r7}
 80008ba:	b083      	sub	sp, #12
 80008bc:	af00      	add	r7, sp, #0
	for(uint32_t i=0; i<500000/2; i++){
 80008be:	2300      	movs	r3, #0
 80008c0:	607b      	str	r3, [r7, #4]
 80008c2:	e002      	b.n	80008ca <delay+0x12>
 80008c4:	687b      	ldr	r3, [r7, #4]
 80008c6:	3301      	adds	r3, #1
 80008c8:	607b      	str	r3, [r7, #4]
 80008ca:	687b      	ldr	r3, [r7, #4]
 80008cc:	4a04      	ldr	r2, [pc, #16]	; (80008e0 <delay+0x28>)
 80008ce:	4293      	cmp	r3, r2
 80008d0:	d9f8      	bls.n	80008c4 <delay+0xc>

	}
}
 80008d2:	bf00      	nop
 80008d4:	bf00      	nop
 80008d6:	370c      	adds	r7, #12
 80008d8:	46bd      	mov	sp, r7
 80008da:	bc80      	pop	{r7}
 80008dc:	4770      	bx	lr
 80008de:	bf00      	nop
 80008e0:	0003d08f 	.word	0x0003d08f

080008e4 <main>:


int main(void){
 80008e4:	b580      	push	{r7, lr}
 80008e6:	b086      	sub	sp, #24
 80008e8:	af00      	add	r7, sp, #0

	// Configure the Button
	GPIO_Handle_t Btn;
	memset(&Btn, 0, sizeof(Btn)); // Set the Registers to 0 so no Corruption happens
 80008ea:	f107 030c 	add.w	r3, r7, #12
 80008ee:	220c      	movs	r2, #12
 80008f0:	2100      	movs	r1, #0
 80008f2:	4618      	mov	r0, r3
 80008f4:	f000 f875 	bl	80009e2 <memset>
	Btn.pGPIOx = GPIOB;
 80008f8:	4b1b      	ldr	r3, [pc, #108]	; (8000968 <main+0x84>)
 80008fa:	60fb      	str	r3, [r7, #12]
	Btn.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_6;
 80008fc:	2306      	movs	r3, #6
 80008fe:	743b      	strb	r3, [r7, #16]
	Btn.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IT_FT;
 8000900:	2304      	movs	r3, #4
 8000902:	747b      	strb	r3, [r7, #17]
	Btn.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 8000904:	2302      	movs	r3, #2
 8000906:	74bb      	strb	r3, [r7, #18]
	Btn.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_PIN_PU;
 8000908:	2301      	movs	r3, #1
 800090a:	74fb      	strb	r3, [r7, #19]

	// Configure the LED
	GPIO_Handle_t Led;
	memset(&Led, 0, sizeof(Led));
 800090c:	463b      	mov	r3, r7
 800090e:	220c      	movs	r2, #12
 8000910:	2100      	movs	r1, #0
 8000912:	4618      	mov	r0, r3
 8000914:	f000 f865 	bl	80009e2 <memset>
	Led.pGPIOx = GPIOA;
 8000918:	4b14      	ldr	r3, [pc, #80]	; (800096c <main+0x88>)
 800091a:	603b      	str	r3, [r7, #0]
	Led.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_6;
 800091c:	2306      	movs	r3, #6
 800091e:	713b      	strb	r3, [r7, #4]
	Led.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUTPUT;
 8000920:	2301      	movs	r3, #1
 8000922:	717b      	strb	r3, [r7, #5]
	Led.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 8000924:	2300      	movs	r3, #0
 8000926:	723b      	strb	r3, [r7, #8]
	Led.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 8000928:	2302      	movs	r3, #2
 800092a:	71bb      	strb	r3, [r7, #6]
	Led.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 800092c:	2300      	movs	r3, #0
 800092e:	71fb      	strb	r3, [r7, #7]

	// Enable Peripheral Clocks
	GPIO_PeriClockControl(Btn.pGPIOx, ENABLE);
 8000930:	68fb      	ldr	r3, [r7, #12]
 8000932:	2101      	movs	r1, #1
 8000934:	4618      	mov	r0, r3
 8000936:	f7ff fc65 	bl	8000204 <GPIO_PeriClockControl>
	GPIO_PeriClockControl(Led.pGPIOx, ENABLE);
 800093a:	683b      	ldr	r3, [r7, #0]
 800093c:	2101      	movs	r1, #1
 800093e:	4618      	mov	r0, r3
 8000940:	f7ff fc60 	bl	8000204 <GPIO_PeriClockControl>

	// Initialize Peripherals
	GPIO_Init(&Btn);
 8000944:	f107 030c 	add.w	r3, r7, #12
 8000948:	4618      	mov	r0, r3
 800094a:	f7ff fd2b 	bl	80003a4 <GPIO_Init>
	GPIO_Init(&Led);
 800094e:	463b      	mov	r3, r7
 8000950:	4618      	mov	r0, r3
 8000952:	f7ff fd27 	bl	80003a4 <GPIO_Init>

	// Configure the Interrupt
	GPIO_IRQPriorityConfig(IRQ_NUM_EXTI9_5, NVIC_IRQ_PRIO15);
 8000956:	210f      	movs	r1, #15
 8000958:	2017      	movs	r0, #23
 800095a:	f7ff ff63 	bl	8000824 <GPIO_IRQPriorityConfig>
	GPIO_IRQInterruptConfig(IRQ_NUM_EXTI9_5, ENABLE);
 800095e:	2101      	movs	r1, #1
 8000960:	2017      	movs	r0, #23
 8000962:	f7ff fedb 	bl	800071c <GPIO_IRQInterruptConfig>


	while(1);
 8000966:	e7fe      	b.n	8000966 <main+0x82>
 8000968:	40020400 	.word	0x40020400
 800096c:	40020000 	.word	0x40020000

08000970 <EXTI9_5_IRQHandler>:
	return 0;
}


// ISR (Interrupt Service Request)
void EXTI9_5_IRQHandler(void){
 8000970:	b580      	push	{r7, lr}
 8000972:	af00      	add	r7, sp, #0
	delay();
 8000974:	f7ff ffa0 	bl	80008b8 <delay>
	GPIO_IRQHandling(GPIO_PIN_NO_6);
 8000978:	2006      	movs	r0, #6
 800097a:	f7ff ff7d 	bl	8000878 <GPIO_IRQHandling>
	GPIO_ToggleOutputPin(GPIOA, GPIO_PIN_NO_6);
 800097e:	2106      	movs	r1, #6
 8000980:	4802      	ldr	r0, [pc, #8]	; (800098c <EXTI9_5_IRQHandler+0x1c>)
 8000982:	f7ff feb7 	bl	80006f4 <GPIO_ToggleOutputPin>
}
 8000986:	bf00      	nop
 8000988:	bd80      	pop	{r7, pc}
 800098a:	bf00      	nop
 800098c:	40020000 	.word	0x40020000

08000990 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000990:	480d      	ldr	r0, [pc, #52]	; (80009c8 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000992:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000994:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000998:	480c      	ldr	r0, [pc, #48]	; (80009cc <LoopForever+0x6>)
  ldr r1, =_edata
 800099a:	490d      	ldr	r1, [pc, #52]	; (80009d0 <LoopForever+0xa>)
  ldr r2, =_sidata
 800099c:	4a0d      	ldr	r2, [pc, #52]	; (80009d4 <LoopForever+0xe>)
  movs r3, #0
 800099e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80009a0:	e002      	b.n	80009a8 <LoopCopyDataInit>

080009a2 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80009a2:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80009a4:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80009a6:	3304      	adds	r3, #4

080009a8 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80009a8:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80009aa:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80009ac:	d3f9      	bcc.n	80009a2 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80009ae:	4a0a      	ldr	r2, [pc, #40]	; (80009d8 <LoopForever+0x12>)
  ldr r4, =_ebss
 80009b0:	4c0a      	ldr	r4, [pc, #40]	; (80009dc <LoopForever+0x16>)
  movs r3, #0
 80009b2:	2300      	movs	r3, #0
  b LoopFillZerobss
 80009b4:	e001      	b.n	80009ba <LoopFillZerobss>

080009b6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80009b6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80009b8:	3204      	adds	r2, #4

080009ba <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80009ba:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80009bc:	d3fb      	bcc.n	80009b6 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80009be:	f000 f819 	bl	80009f4 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80009c2:	f7ff ff8f 	bl	80008e4 <main>

080009c6 <LoopForever>:

LoopForever:
  b LoopForever
 80009c6:	e7fe      	b.n	80009c6 <LoopForever>
  ldr   r0, =_estack
 80009c8:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80009cc:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80009d0:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80009d4:	08000a5c 	.word	0x08000a5c
  ldr r2, =_sbss
 80009d8:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80009dc:	2000001c 	.word	0x2000001c

080009e0 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80009e0:	e7fe      	b.n	80009e0 <ADC_IRQHandler>

080009e2 <memset>:
 80009e2:	4402      	add	r2, r0
 80009e4:	4603      	mov	r3, r0
 80009e6:	4293      	cmp	r3, r2
 80009e8:	d100      	bne.n	80009ec <memset+0xa>
 80009ea:	4770      	bx	lr
 80009ec:	f803 1b01 	strb.w	r1, [r3], #1
 80009f0:	e7f9      	b.n	80009e6 <memset+0x4>
	...

080009f4 <__libc_init_array>:
 80009f4:	b570      	push	{r4, r5, r6, lr}
 80009f6:	4d0d      	ldr	r5, [pc, #52]	; (8000a2c <__libc_init_array+0x38>)
 80009f8:	4c0d      	ldr	r4, [pc, #52]	; (8000a30 <__libc_init_array+0x3c>)
 80009fa:	1b64      	subs	r4, r4, r5
 80009fc:	10a4      	asrs	r4, r4, #2
 80009fe:	2600      	movs	r6, #0
 8000a00:	42a6      	cmp	r6, r4
 8000a02:	d109      	bne.n	8000a18 <__libc_init_array+0x24>
 8000a04:	4d0b      	ldr	r5, [pc, #44]	; (8000a34 <__libc_init_array+0x40>)
 8000a06:	4c0c      	ldr	r4, [pc, #48]	; (8000a38 <__libc_init_array+0x44>)
 8000a08:	f000 f818 	bl	8000a3c <_init>
 8000a0c:	1b64      	subs	r4, r4, r5
 8000a0e:	10a4      	asrs	r4, r4, #2
 8000a10:	2600      	movs	r6, #0
 8000a12:	42a6      	cmp	r6, r4
 8000a14:	d105      	bne.n	8000a22 <__libc_init_array+0x2e>
 8000a16:	bd70      	pop	{r4, r5, r6, pc}
 8000a18:	f855 3b04 	ldr.w	r3, [r5], #4
 8000a1c:	4798      	blx	r3
 8000a1e:	3601      	adds	r6, #1
 8000a20:	e7ee      	b.n	8000a00 <__libc_init_array+0xc>
 8000a22:	f855 3b04 	ldr.w	r3, [r5], #4
 8000a26:	4798      	blx	r3
 8000a28:	3601      	adds	r6, #1
 8000a2a:	e7f2      	b.n	8000a12 <__libc_init_array+0x1e>
 8000a2c:	08000a54 	.word	0x08000a54
 8000a30:	08000a54 	.word	0x08000a54
 8000a34:	08000a54 	.word	0x08000a54
 8000a38:	08000a58 	.word	0x08000a58

08000a3c <_init>:
 8000a3c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a3e:	bf00      	nop
 8000a40:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000a42:	bc08      	pop	{r3}
 8000a44:	469e      	mov	lr, r3
 8000a46:	4770      	bx	lr

08000a48 <_fini>:
 8000a48:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a4a:	bf00      	nop
 8000a4c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000a4e:	bc08      	pop	{r3}
 8000a50:	469e      	mov	lr, r3
 8000a52:	4770      	bx	lr
