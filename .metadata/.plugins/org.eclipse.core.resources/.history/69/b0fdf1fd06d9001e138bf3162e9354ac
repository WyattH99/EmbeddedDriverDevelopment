/*
 * ds1307.c
 *
 *  Created on: Mar 2, 2024
 *      Author: wyatt
 */

#include <stdint.h>
#include <string.h>

#include "ds1307.h"

I2C_Handle_t g_ds1307I2cHandle;

/*
 * Private Helper Functions Prototype
 */
static void ds1307_i2c_pin_config(void);
static void ds1307_i2c_config(void);
static void ds1307_write(uint8_t value, uint8_t reg_addr);


/* ds1307 Initialization */
uint8_t ds1307_init(void){


	// 1. Initialize the I2C GPIO Pins
	ds1307_i2c_pin_config();

	// 2. Initialize the I2C Peripheral
	ds1307_i2c_config();

	// 3. Enable the I2C Peripheral
	I2C_PeripheralControl(DS1307_I2C, ENABLE);

	// 4. Make Clock Halt = 0;
	ds1307_write(0x00, DS1307_ADDR_SEC);

}


/* Set / Get Time */
void ds1307_set_current_time(RTC_time_t *rtc_time){

}

void ds1307_get_current_time(RTC_time_t *rtc_time){

}


/* Set / Get Date */
void ds1307_set_current_date(RTC_date_t *rtc_date){

}

void ds1307_get_current_date(RTC_date_t *rtc_date){

}



/*
 * Private Helper Functions Definitions
 */
static void ds1307_i2c_pin_config(void){
	/*
	 * I2C1 Pins:
	 * SCL --> PB8
	 * SDA --> PB9
	 * ALT Function Mode: 4
	 */

	/* I2C SCL */
	GPIO_Handle_t i2c_scl;
	memset(i2c_scl, 0, sizeof(i2c_scl)); // Clear all the Variables
	i2c_scl.pGPIOx = DS1307_I2C_GPIO_PORT;
	i2c_scl.GPIO_PinConfig.GPIO_PinNumber = DS1307_I2C_SCL_PIN;
	i2c_scl.GPIO_PinConfig.GPIO_PinPuPdControl = DS1307_I2C_PUPD;
	i2c_scl.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_ALTFUN;
	i2c_scl.GPIO_PinConfig.GPIO_PinAltFunMode = 4;
	i2c_scl.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_OD;
	i2c_scl.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
	GPIO_Init(&i2c_scl);

	/* I2C SDA */
	GPIO_Handle_t i2c_sda;
	memset(i2c_sda, 0, sizeof(i2c_sda)); // Clear all the Variables
	i2c_sda.pGPIOx = DS1307_I2C_GPIO_PORT;
	i2c_sda.GPIO_PinConfig.GPIO_PinNumber = DS1307_I2C_SDA_PIN;
	i2c_sda.GPIO_PinConfig.GPIO_PinPuPdControl = DS1307_I2C_PUPD;
	i2c_sda.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_ALTFUN;
	i2c_sda.GPIO_PinConfig.GPIO_PinAltFunMode = 4;
	i2c_sda.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_OD;
	i2c_sda.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
	GPIO_Init(&i2c_sda);

}


static void ds1307_i2c_pin_config(void){
	g_ds1307I2cHandle.pI2Cx = DS1307_I2C;
//	g_ds1307I2cHandle.I2C_Config.I2C_DeviceAddress = DS1307_I2C_ADDRESS;
	g_ds1307I2cHandle.I2C_Config.I2C_SCLSpeed = DS1307_I2C_SPEED;
	g_ds1307I2cHandle.I2C_Config.I2C_ACKControl = I2C_ACK_ENABLE;
//	g_ds1307I2cHandle.I2C_Config.I2C_FMDutyCycle = I2C_FM_DUTY_2;

	I2C_Init(&g_ds1307I2cHandle);
}


static void ds1307_write(uint8_t value, uint8_t reg_addr){
	uint8_t tx[2];
	tx[0] = reg_addr;
	tx[1] = value;

	// Send Register Address then the Value
	I2C_MasterSendData(&g_ds1307I2cHandle, tx, 2, DS1307_I2C_ADDRESS, 0);


}











